{"version":3,"sources":["utils/PortfolioContext.js","components/Header/index.js","components/DevProjectCard/index.js","components/DevPortfolio/index.js","components/DesignProjectCard/index.js","components/DesignPortfolio/index.js","pages/Home/index.js","components/GithubPin/index.js","components/ContactPin/index.js","components/Bio/index.js","components/TechButton/index.js","components/TechFilter/index.js","components/Skills/index.js","components/ContactForm/index.js","components/FavoriteThings/index.js","pages/About/index.js","pages/NotFound/index.js","components/TopNavbar/index.js","components/Footer/index.js","App.js","index.js","gedalya-krycer-resume.pdf","motion-design-web.mp4","motion-design-web.webp","figma-thumbnail.jpg"],"names":["PortfolioContext","React","createContext","PortfolioProvider","children","useState","toggleBurgerMenu","setToggleBurgerMenu","amHome","setAmHome","amAbout","setAmAbout","Provider","value","Header","title","subTitleOne","subTitleTwo","tl","gsap","timeline","ruleRef","useRef","h1Ref","h3Ref","useEffect","from","current","duration","autoAlpha","scale","ease","to","width","borderRadius","y","className","ref","CustomToggle","eventKey","cardSlide","setCardSlide","decoratedOnClick","useAccordionToggle","onClick","registerPlugin","ScrollTrigger","DevProjectCard","img","tech","deployLink","repoLink","techStyler","split","forEach","element","push","key","uuidv4","devCardsRef","scrollTrigger","trigger","start","end","toggleActions","Accordion","Card","src","alt","Collapse","Body","href","target","rel","DevPortfolio","devTitleRef","delay","Container","Row","projects","map","project","id","DesignPortfolio","autoPlay","loop","muted","playsInline","videoWebp","type","videoMp4","figmaThumbnail","DesignProjectCard","Home","GithubPin","githubContainerRef","x","ContactPin","contactContainerRef","Bio","Col","lg","TechButton","name","link","svg","classType","setClassType","TechFilter","handleDevFilter","handleDesignFilter","handleLearnFilter","devFilterActive","designFilterActive","learnFilterActive","Skills","techArray","setTechArray","setDevFilterActive","setDesignFilterActive","setLearnFilterActive","activeSelector","selector","filter","techType","includes","technology","ContactForm","errMsg","setErrMsg","executing","setExecuting","formValues","setFormValues","formReset","setFormReset","loaded","setLoaded","msgSent","setMsgSent","rcError","setRcError","isSubmitting","setIsSubmitting","token","setToken","verified","setVerified","rcRef","a","data","options","method","headers","qs","stringify","url","axios","message","handleSubmit","onError","console","log","onExpire","resetReCaptcha","onVerify","resetEverything","resetForm","reset","initialValues","email","validate","values","errors","test","onSubmit","execute","data-netlify","data-netlify-honeypot","data-netlify-recaptcha","noValidate","htmlFor","component","sitekey","onLoad","size","disabled","renderButton","FavoriteThings","populatedCards","favThings","e","things","About","NotFound","TopNavbar","useContext","handleLinkClick","navContainerRef","logoRef","leftLinksRef","resumeButtonRef","mobileSocialRef","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Nav","Link","resumeFile","download","role","aria-label","App","ReactGA","initialize","pageview","window","location","pathname","search","rightPinRef","leftPinRef","exact","path","Footer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.53faa704.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nconst PortfolioContext = React.createContext();\n\nexport const usePortfolioContext = () => {\n    return useContext(PortfolioContext);\n};\n\n\nexport function PortfolioProvider({ children }) {\n\n    // Controls the nav burger menu on mobile to open and close\n    const [toggleBurgerMenu, setToggleBurgerMenu] = useState(true);\n\n    // Stores which page the user is on\n    const [amHome, setAmHome] = useState();\n    const [amAbout, setAmAbout] = useState();\n\n    return (\n\n          <PortfolioContext.Provider\n            value={{\n                toggleBurgerMenu,\n                setToggleBurgerMenu,\n                amHome,\n                setAmHome,\n                amAbout,\n                setAmAbout\n            }}\n          >\n            {children}\n          </PortfolioContext.Provider>\n\n      );\n}","import React, { useRef, useEffect } from 'react';\nimport { gsap } from \"gsap\";\nimport './style.css';\n\n// This is static top section of the page and gives it semantic value.\nfunction Header({ title, subTitleOne, subTitleTwo }) {\n\n    // GSAP ANIMATIONS\n    const tl = gsap.timeline();\n\n    // Ref for blue line\n    const ruleRef = useRef(null);\n\n    // Ref for h1 line\n    const h1Ref = useRef(null);\n\n    // Ref for h3 line\n    const h3Ref = useRef(null);\n\n\n    useEffect(() => {\n\n        tl.from(ruleRef.current, {\n            duration: .5,\n            autoAlpha: 0,\n            scale: 4,\n            ease: 'back.out(3)'\n            \n        })\n            .to(ruleRef.current, {\n                duration: 1,\n                width: 210,\n                borderRadius: 0,\n                ease: 'back.out(3)'\n            })\n\n        tl.from(h1Ref.current, {\n            duration: 1, \n            autoAlpha: 0,\n            y: 20,\n            ease: 'back.out(3)'\n        }, '-=1')\n\n        tl.from(h3Ref.current, {\n            duration: 1, \n            autoAlpha: 0,\n            y: -20,\n            ease: 'back.out(3)'\n        }, '-=1')\n\n    }, [tl])\n\n\n    return (\n        <header>\n            <h1 className=\"g_white-color\" ref={h1Ref}>{title}</h1>\n            <hr ref={ruleRef} />\n            <div ref={h3Ref}>\n                <h3 className=\"header__sub-title\">{subTitleOne}</h3>\n                <h3 className=\"header__sub-title\">{subTitleTwo}</h3>\n            </div>\n\n        </header>\n    )\n}\n\n\nexport default Header;","import React, { useState, useEffect, useRef } from 'react';\nimport './style.css';\nimport { FaGithub, FaDesktop } from 'react-icons/fa';\nimport { v4 as uuidv4 } from 'uuid';\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\ngsap.registerPlugin(ScrollTrigger);\n\nfunction CustomToggle({ children, eventKey }) {\n\n\n    const [cardSlide, setCardSlide] = useState(false);\n\n\n    // Expands Accordion and Reveals Thumbnail\n    // ==================================================================\n    const decoratedOnClick = useAccordionToggle(eventKey, () => {\n        !cardSlide ? setCardSlide(true) : setCardSlide(false);\n    });\n\n    return (\n        <button\n            onClick={decoratedOnClick}\n            className={`g_card-slide ${cardSlide ? \"g_card-slide-up\" : \"\"}`}\n        >\n            {children}\n        </button>\n    );\n}\n\n\n\n// Dev Project Component.\n// ==================================================================\nfunction DevProjectCard({ img, title, tech, deployLink, repoLink }) {\n\n\n    // Styles tech text to be separates words in pill shapes\n    const techStyler = []\n    const styledTech = tech.split(\", \")\n    styledTech.forEach(element => {\n        techStyler.push(<h5 key={uuidv4()} className=\"dev-project__tech \">{element}</h5>)\n\n    });\n\n\n\n    // GSAP ANIMATIONS\n    const tl = gsap.timeline();\n\n    // Ref for title pin border\n    const devCardsRef = useRef(null);\n\n    useEffect(() => {\n        gsap.from(devCardsRef.current, {\n            duration: 2,\n            autoAlpha: 0,\n            y: 100,\n            ease: 'back.out(2)',\n            scrollTrigger: {\n                trigger: devCardsRef.current,\n                start: 'top bottom',\n                end: '400',\n                toggleActions: 'play none none reverse'\n                // markers: true\n            }\n        });\n    }, [tl])\n\n\n\n    return (\n        <div className=\"g_projects-container\" ref={devCardsRef}>\n            <Accordion>\n                <Card>\n                    <div className=\"neumorphism\">\n                        <CustomToggle eventKey=\"0\">\n\n\n                            <img src={img} alt={title} className=\"g_project-img\" />\n                        </CustomToggle>\n                    </div>\n                    <div className=\"g_meta-container dev-project__meta-container\">\n\n\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <h4 className=\"dev-project__title\">{title}</h4>\n\n\n\n                                <div className=\"dev-project__links\">\n                                    {!deployLink ? null : <a href={deployLink}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\" className=\"dev-project__button dev-project__button--half\">\n                                        <FaDesktop />\n                                        <h5>View Deployed</h5>\n                                    </a>}\n\n                                    <a href={repoLink}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\" className={!deployLink ?\n                                            \"dev-project__button dev-project__button--full\" : \"dev-project__button dev-project__button--half\"}>\n                                        <FaGithub />\n                                        <h5>View Repo</h5>\n                                    </a>\n                                </div>\n\n                                <div className=\"dev-project__info\">\n                                    {techStyler}\n                                </div>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </div>\n\n\n                </Card>\n\n            </Accordion>\n\n\n\n\n\n\n\n        </div>\n\n\n    )\n}\n\n\nexport default DevProjectCard;\n","import React, { useEffect, useRef } from \"react\";\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport DevProjectCard from '../../components/DevProjectCard';\nimport projects from '../../utils/projects.json';\nimport { gsap } from \"gsap\";\n\n\n// This is static top section of the page and gives it semantic value.\nfunction DevPortfolio() {\n\n    // GSAP ANIMATIONS\n    const tl = gsap.timeline();\n\n    // Ref for title pin border\n    const devTitleRef = useRef(null);\n\n\n    useEffect(() => {\n\n        tl.from(devTitleRef.current, {\n            duration: 1,\n            autoAlpha: 0,\n            y: 50,\n            ease: \"expo.out\",\n            delay: 1\n        })\n\n\n    }, [tl])\n\n\n    return (\n        <section>\n            <Container>\n                <h2 ref={devTitleRef}>Dev Work</h2>\n\n                <Row className=\"justify-content-around g_negative-margin\">\n\n                    {projects.map(project => (\n                        <DevProjectCard\n                            key={project.id}\n                            img={project.img}\n                            title={project.title}\n                            tech={project.tech}\n                            deployLink={project.deployLink}\n                            repoLink={project.repoLink}\n                        />\n                    ))}\n\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default DevPortfolio;","import React from 'react';\nimport './style.css';\nimport { FaArrowRight } from 'react-icons/fa';\nimport videoMp4 from '../../motion-design-web.mp4';\nimport videoWebp from '../../motion-design-web.webp';\nimport figmaThumbnail from '../../figma-thumbnail.jpg';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction DesignPortfolio() {\n\n\n\n    return (\n        <>\n        <div className=\"design-project__container \">\n            <a href=\"http://gedalya.myportfolio.com/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\" >\n                <div className=\"g__design-project__card-slide\">\n                    <video autoPlay={true} loop={true} muted={true} playsInline={true} className=\"design-project__project-img\">\n                        <source src={videoWebp} type=\"video/webm\" />\n                        <source src={videoMp4} type=\"video/mp4\" />\n                    </video>\n                </div>\n\n                <div className=\"design-project__meta-container\">\n\n                    <h4 className=\"design-project__text\">View design projects</h4>\n                    <FaArrowRight className=\"design-project__icon\" />\n                </div>\n            </a>\n        </div>\n        <div className=\"design-project__container \">\n            <a href=\"https://youtu.be/7nmarPXV2OQ\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\" >\n                <div className=\"g__design-project__card-slide\">\n                    <img src={figmaThumbnail} alt=\"From a Figment to Figma.\" className=\"design-project__project-img\" />\n                   \n                </div>\n\n                <div className=\"design-project__meta-container\">\n\n                    <h4 className=\"design-project__text\">Watch my workshop</h4>\n                    <FaArrowRight className=\"design-project__icon\" />\n                </div>\n            </a>\n        </div>\n        </>\n\n    )\n}\n\n\nexport default DesignPortfolio;","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport DesignProjectCard from '../../components/DesignProjectCard';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction DevPortfolio() {\n    return (\n        <section className=\"design-portfolio__section\">\n            <Container>\n                <h2>Design</h2>\n\n                <Row className=\"justify-content-around g_negative-margin\">\n                    <DesignProjectCard />\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default DevPortfolio;","import React from 'react';\nimport './style.css';\nimport Header from '../../components/Header';\nimport DevPortfolio from '../../components/DevPortfolio';\nimport DesignPortfolio from '../../components/DesignPortfolio';\n\n\n\n\nfunction Home() {\n\n\n    return (\n        <>\n            <Header\n                title=\"Hi, I’m Gedalya, a front-end developer and creative.\"\n                subTitleOne={`I organize details — through code, design, motion and photography.`}\n            />\n            <DevPortfolio />\n            <DesignPortfolio />\n\n        </>\n    )\n}\n\n\nexport default Home;","import React, { useEffect, useRef } from 'react';\nimport { gsap } from \"gsap\";\nimport './style.css';\nimport { FaGithub, FaLinkedinIn, FaBehance } from 'react-icons/fa';\n\n\nfunction GithubPin() {\n\n      // GSAP ANIMATIONS\n      const tl = gsap.timeline();\n\n      // Ref for github icons\n      const githubContainerRef = useRef(null);\n  \n      useEffect(() => {\n  \n          tl.from(githubContainerRef.current, {\n              duration: 1,\n              autoAlpha: 0,\n              x: -20,\n              ease: 'back.out(2)',\n              delay: 1.3\n          })\n  \n  \n      }, [tl])\n    return (\n        <div className=\"githubPin\" ref={githubContainerRef}>\n            <a\n                href=\"https://www.linkedin.com/in/gedalyakrycer/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"githubPin_link\"\n            >\n                <FaLinkedinIn />\n            </a>\n            <a\n                href=\"https://github.com/GedalyaKrycer\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"githubPin_link\"\n            >\n                <FaGithub />\n            </a>\n            <a\n                href=\"https://www.behance.net/gedalyakrycer\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"githubPin_link\"\n            >\n                <FaBehance />\n            </a>\n\n        </div>\n    )\n}\n\n\nexport default GithubPin;","import React, { useEffect, useRef } from 'react';\nimport './style.css';\nimport { gsap } from \"gsap\";\n\n\n\nfunction ContactPin() {\n\n    // GSAP ANIMATIONS\n    const tl = gsap.timeline();\n\n    // Ref for contact link\n    const contactContainerRef = useRef(null);\n\n    useEffect(() => {\n\n        tl.from(contactContainerRef.current, {\n            duration: 1,\n            autoAlpha: 0,\n            x: 20,\n            ease: 'back.out(2)',\n            delay: 1.3\n        })\n\n\n    }, [tl])\n\n    return (\n        <div className=\"contactPin\" ref={contactContainerRef}>\n            <a\n                href=\"/about#contact\"\n                className=\"contactPin__link\"\n            >\n                Contact\n            </a>\n\n\n        </div>\n    )\n}\n\n\nexport default ContactPin;","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n// This is static top section of the page and gives it semantic value.\nfunction Bio() {\n    return (\n        <section>\n            <Container>\n                <h2>Bio</h2>\n\n                <Row className=\"justify-content-md-center g_negative-margin\">\n                    <Col className=\"g_white-color\" lg={8}>\n                        <p className=\"g__body-lg\">\n                            Hi there! I am a Vegas-based front-end developer and creative, who obsesses over the details and loves learning new technologies. \n                            \n                        </p>\n                         <p>   \n                            (I also obsess over movies and enjoy everything from superhero blockbusters to romcoms.)\n                        </p>\n                        <p>\n                                I recently left my agency job as a Digital Design Director to follow my true passion—building websites from the ground up.\n                        </p>\n                        <p>\n                                In September of 2020, I earned a certification in Full Stack Development, from the University of Arizona's 6 month coding bootcamp. It's a joy to not only design a great site, but code it into reality as well.\n                        </p>\n\n                         <p>\n                                With this deeper understanding of how to build quality sites, I look forward to changing careers to web development, built on a strong design foundation.\n                        </p>\n\n                \n                    </Col>\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default Bio;","import React, { useState, useEffect } from 'react';\nimport './style.css';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction TechButton({ name, link, svg, type }) {\n\n    // State to determine the css class type\n    const [classType, setClassType ] = useState(\"hello\");\n\n    useEffect(() => {\n      if(type === \"dev\") {\n        setClassType(\"tech-btn__btn--dev\");\n      } else if (type === \"design\") {\n        setClassType(\"tech-btn__btn--design\");\n      } else {\n        setClassType(\"tech-btn__btn--learn\")\n      }\n    }, [type])\n\n\n\n    return (\n\n        <a href={link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={`tech-btn__btn ${classType}`}\n        >\n            <img src={svg} alt={name} className={`tech-btn__icon`} />\n            {name}\n        </a>\n\n\n\n    )\n}\n\n\nexport default TechButton;","import React from 'react';\nimport './style.css';\n\n\nfunction TechFilter({ handleDevFilter, handleDesignFilter, handleLearnFilter, devFilterActive, designFilterActive, learnFilterActive }) {\n\n\n  return (\n\n    <div className=\"tech-filter__container\">\n      <div className=\"tech-filter__nav\">\n\n\n        <button className={`tech-filter__nav-dev ${devFilterActive ? \"tech-filter__nav-dev--active\" : null}`}\n          onClick={handleDevFilter}>\n          Coding\n        </button>\n\n\n\n\n        <button className={`tech-filter__nav-design ${designFilterActive ? \"tech-filter__nav-design--active\" : null}`}\n          onClick={handleDesignFilter}>\n          Design\n        </button>\n\n\n\n        <button className={`tech-filter__nav-learn ${learnFilterActive ? \"tech-filter__nav-learn--active\" : null}`}\n          onClick={handleLearnFilter}>\n          Learning\n          </button>\n\n      </div>\n    </div>\n\n\n\n  )\n}\n\n\nexport default TechFilter;","import React, { useState } from 'react';\nimport './style.css';\nimport TechButton from '../TechButton';\nimport TechFilter from '../TechFilter';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport tech from '../../utils/tech.json';\n\nfunction Skills() {\n\n    // State to hold which buttons to show\n    const [techArray, setTechArray] = useState(tech);\n\n    // State that determines if a filter has been clicked\n    const [devFilterActive, setDevFilterActive] = useState(false);\n    const [designFilterActive, setDesignFilterActive] = useState(false);\n    const [learnFilterActive, setLearnFilterActive] = useState(false);\n\n\n\n    // Helper function to make setting the active states DRYer\n    const activeSelector = (selector) => {\n        switch (selector) {\n            case \"dev\":\n                setDevFilterActive(true);\n                setDesignFilterActive(false);\n                setLearnFilterActive(false);\n                break;\n            case \"design\":\n                setDevFilterActive(false);\n                setDesignFilterActive(true);\n                setLearnFilterActive(false);\n                break;\n            case \"learn\":\n                setDevFilterActive(false);\n                setDesignFilterActive(false);\n                setLearnFilterActive(true);\n                break;\n            default:\n                setDevFilterActive(false);\n                setDesignFilterActive(false);\n                setLearnFilterActive(false);\n        }\n    }\n\n\n    // Function to show just the developer tool buttons\n    const handleDevFilter = () => {\n\n        // Checks if nav is already active \n        if (devFilterActive === false) {\n\n            // Sets Dev State to Active and turns the other's off\n            activeSelector(\"dev\")\n\n            // Filters out all buttons excepts the dev type\n            setTechArray([...tech].filter(techType =>\n                techType.type.includes(\"dev\")\n            ))\n\n        } else {\n\n            // Replaces array with the original selection of buttons\n            setTechArray(tech);\n\n            // Removes active styling\n            setDevFilterActive(false);\n        }\n    }\n\n\n\n    // Function to show just the Design tool buttons\n    const handleDesignFilter = () => {\n\n        // Checks if nav is already active \n        if (designFilterActive === false) {\n\n            // Sets Design State to Active and turns the other's off\n            activeSelector(\"design\")\n\n            // Filters out all buttons excepts the design type\n            setTechArray([...tech].filter(techType =>\n                techType.type.includes(\"design\")\n            ))\n\n        } else {\n\n            // Replaces array with the original selection of buttons\n            setTechArray(tech);\n\n            // Removes active styling\n            setDesignFilterActive(false);\n        }\n    }\n\n\n\n    // Function to show just the Learn tool buttons\n    const handleLearnFilter = () => {\n\n        // Checks if nav is already active \n        if (learnFilterActive === false) {\n\n            // // Sets Learn State to Active and turns the other's off\n            activeSelector(\"learn\")\n\n\n            // Filters out all buttons excepts the learn type\n            setTechArray([...tech].filter(techType =>\n                techType.type.includes(\"learn\")\n            ))\n\n        } else {\n\n            // Replaces array with the original selection of buttons\n            setTechArray(tech);\n\n            // Removes active styling\n            setLearnFilterActive(false);\n        }\n    }\n\n\n\n\n\n    return (\n        <section>\n            <Container className=\"g__about-sections\">\n                <h2>Skills</h2>\n\n                <Row className=\"justify-content-md-center g_negative-margin\">\n                    <Col lg={8}>\n                        <p className=\"skills__intro-text g__body-lg\">These are some of the tools I use on projects or currently learning.</p>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg={12} className=\"skills__tech-container\">\n\n                        <TechFilter\n                            devFilterActive={devFilterActive}\n                            designFilterActive={designFilterActive}\n                            learnFilterActive={learnFilterActive}\n                            handleDevFilter={handleDevFilter}\n                            handleDesignFilter={handleDesignFilter}\n                            handleLearnFilter={handleLearnFilter}\n\n                        />\n\n                        <div className=\"skills__tech-btn-container\">\n                            {techArray.map(technology => (\n                                <TechButton\n                                    key={technology.id}\n                                    name={technology.name}\n                                    link={technology.link}\n                                    svg={technology.svg}\n                                    type={technology.type}\n\n                                />\n                            ))}\n                        </div>\n\n                    </Col>\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default Skills;","import React, { useRef, useEffect, useState } from \"react\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport Reaptcha from \"reaptcha\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './style.css';\n\n\n\n\n\n\n// This is static top section of the page and gives it semantic value.\nfunction ContactForm() {\n\n    // START Code Copied From https://github.com/kimfucious/netlify-forms-formik/blob/master/src/FormikForm.js#L7\n    //\n    const [errMsg, setErrMsg] = useState(\"\");\n    const [executing, setExecuting] = useState(false);\n    const [formValues, setFormValues] = useState({});\n    const [formReset, setFormReset] = useState({});\n    const [loaded, setLoaded] = useState(false);\n    const [msgSent, setMsgSent] = useState(false);\n    const [rcError, setRcError] = useState(\"\");\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [token, setToken] = useState(\"\");\n    const [verified, setVerified] = useState(false);\n\n    const rcRef = useRef(null);\n\n\n    useEffect(() => {\n        const handleSubmit = async (formValues, token) => {\n            const data = {\n                ...formValues,\n                \"g-recaptcha-response\": token\n            };\n            const options = {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n                data: qs.stringify(data),\n                url: \"/\"\n            };\n            try {\n                await axios(options);\n                setMsgSent(true);\n                formReset();\n            } catch (e) {\n                setErrMsg(e.message);\n            }\n        };\n        if (token) {\n            handleSubmit(formValues, token);\n        }\n    }, [formReset, formValues, token]);\n\n    const onError = () => {\n        console.log(\"error...\");\n        setRcError(true);\n    };\n\n    const onExpire = () => {\n        console.log(\"expired...\");\n        console.log(\"resetting...\");\n        resetReCaptcha();\n    };\n\n    const onLoad = resetForm => {\n        console.log(\"loaded...\");\n        setLoaded(true);\n        setFormReset(resetForm);\n    };\n\n    const onVerify = token => {\n        console.log(\"verified...\");\n        setToken(token);\n        setVerified(true);\n        setExecuting(false);\n    };\n\n    const renderButton = (executing, isSubmitting) => {\n        if (errMsg) {\n            return (\n                <button\n                    className=\"contact__submit-btn mt-3\"\n                    type=\"submit\"\n                    disabled\n                >\n                    Error\n                </button>\n            );\n        } else if (msgSent) {\n            return (\n                <button\n                    className=\"contact__submit-btn mt-3\"\n                    type=\"submit\"\n                    disabled\n                >\n                    Submitted\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className=\"contact__submit-btn mt-3\"\n                    type=\"submit\"\n                    disabled={isSubmitting || executing}\n                >\n                    Submit\n                </button>\n            );\n        }\n    };\n\n    const resetEverything = resetForm => {\n        if (rcError) {\n            setRcError(false);\n        }\n        if (resetForm) {\n            setMsgSent(false);\n            setErrMsg(false);\n            resetForm();\n        }\n        resetReCaptcha();\n    };\n\n    const resetReCaptcha = async () => {\n        console.log(\"resetting...\");\n        await rcRef.current.reset();\n        setVerified(false);\n    };\n\n    // END Code Copied From https://github.com/kimfucious/netlify-forms-formik/blob/master/src/FormikForm.js#L7\n    //\n\n    return (\n        <section>\n            <Container className=\"g__about-sections\" id=\"contact\">\n                <h2>Contact</h2>\n                <Row className=\"justify-content-md-center g_negative-margin\">\n                    <Col className=\"white-color\" lg={8}>\n                        <div className=\"contact__form-bg\">\n\n                            <Formik\n                                initialValues={{\n                                    \"bot-field\": \"\",\n                                    \"form-name\": \"contact\",\n                                    email: \"\",\n                                    name: \"\",\n                                    message: \"\"\n                                }}\n                                validate={values => {\n                                    let errors = {};\n                                    if (!values.email) {\n                                        errors.email = \"Required\";\n                                    } else if (\n                                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                                    ) {\n                                        errors.email = \"Invalid email address\";\n                                    }\n                                    if (!values.name) {\n                                        errors.name = \"Required\";\n                                    }\n                                    if (!values.message) {\n                                        errors.message = \"Required\";\n                                    }\n                                    return errors;\n                                }}\n                                onSubmit={values => {\n                                    setIsSubmitting(true);\n                                    setFormValues({ ...values });\n                                    setExecuting(true);\n                                    rcRef.current.execute();\n                                }}\n                            >\n                                {({ resetForm }) => (\n                                    <Form\n                                        data-netlify=\"true\"\n                                        data-netlify-honeypot=\"bot-field\"\n                                        data-netlify-recaptcha=\"true\"\n                                        className=\"d-flex flex-column\"\n                                        name=\"contact\"\n                                        noValidate\n                                    >\n                                        <Field type=\"hidden\" name=\"form-name\" />\n                                        <Field type=\"hidden\" name=\"bot-field\" />\n                                        <div className=\"form-group\">\n                                            <label\n                                                className=\"col-form-label col-form-label-lg\"\n                                                htmlFor=\"name\"\n                                            >\n                                                Name\n                                        </label>\n                                            <Field\n                                                className=\"form-control form-control-lg\"\n                                                name=\"name\"\n                                                type=\"text\"\n                                            />\n                                            <ErrorMessage\n                                                className=\"invalid-feedback\"\n                                                name=\"name\"\n                                                component=\"div\"\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label\n                                                className=\"col-form-label col-form-label-lg\"\n                                                htmlFor=\"email\"\n                                            >\n                                                Email\n                                        </label>\n                                            <Field\n                                                className=\"form-control form-control-lg\"\n                                                name=\"email\"\n                                                type=\"email\"\n                                            />\n                                            <ErrorMessage\n                                                className=\"invalid-feedback\"\n                                                name=\"email\"\n                                                component=\"div\"\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label\n                                                className=\"col-form-label col-form-label-lg\"\n                                                htmlFor=\"message\"\n                                            >\n                                                Message\n                                        </label>\n                                            <Field\n                                                className=\"form-control form-control-lg\"\n                                                name=\"message\"\n                                                component=\"textarea\"\n                                            />\n                                            <ErrorMessage\n                                                className=\"invalid-feedback\"\n                                                name=\"message\"\n                                                component=\"div\"\n                                            />\n                                        </div>\n                                        <Reaptcha\n                                            ref={rcRef}\n                                            sitekey=\"6LdZTMMZAAAAAGJy0j2AyImgkQ33Mv4juhtQElid\"\n                                            data-netlify-recaptcha=\"true\"\n                                            onError={onError}\n                                            onExpire={onExpire}\n                                            onVerify={onVerify}\n                                            onLoad={() => onLoad(() => resetForm)}\n                                            size=\"invisible\"\n                                        />\n                                        <div className=\"m-2 col-form-label col-form-label-lg hidden\">\n                                            <span\n                                                className={`badge badge-${loaded ? \"success\" : \"primary\"\n                                                    } mx-2 p-2`}\n                                            >\n                                                loaded\n              </span>\n                                            <span\n                                                className={`badge badge-${verified ? \"success\" : \"primary\"\n                                                    } mx-2 p-2`}\n                                            >\n                                                verified\n              </span>\n                                            {executing && (\n                                                <span className={`badge badge-primary mx-2 p-2`}>\n                                                    executing\n                                                </span>\n                                            )}\n                                            {rcError && (\n                                                <span className={`badge badge-primary mx-2 p-2`}>error</span>\n                                            )}\n                                            {rcError && (\n                                                <button\n                                                    className=\"btn btn-link text-dark\"\n                                                    onClick={() => resetEverything(resetForm)}\n                                                >\n                                                    reset\n                                                </button>\n                                            )}\n                                        </div>\n                                        {renderButton(isSubmitting, executing, verified)}\n                                        {errMsg ? <div className=\"text-primary m-1\">{errMsg}</div> : null}\n                                        {(msgSent || errMsg) && (\n                                            <button className=\"contact__reset-btn\"\n\n                                                onClick={() => resetEverything(resetForm)}\n                                            >\n                                                Send A New Email\n                                            </button>\n                                        )}\n                                    </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </Col>\n                </Row>\n\n                <div className=\"contact__email-container\">\n                    <h2>or</h2>\n                    <div className=\"contact__email-txt\">\n                        <p className=\"g__body-lg\">You can email me at</p>\n\n                        <p>\n                            <a href=\"mailto:gedalya@krycer.com\" \n                            className=\"g__body-lg\">\n                                gedalya@krycer.com\n                        </a>\n                        </p>\n                    </div>\n\n                </div>\n            </Container>\n\n        </section >\n    )\n}\n\n\nexport default ContactForm;","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport favThings from '../../utils/about-fav-things.json';\n\n\nfunction FavoriteThings() {\n\n    const populatedCards = []\n\n    favThings.forEach((e) => {\n        populatedCards.push(\n            <Col lg={3} key={e.id}>\n\n                <div className=\"fav__card-container\">\n                    <img className=\"fav__card-img\" src={e.img} alt={`${e.name}`} />\n                    <h4 className=\"fav__card-title\">{e.name}</h4>\n                    <div className=\"fav__hidden-text\">\n                        <p>{e.things}</p>\n                    </div>\n                </div>\n\n\n\n            </Col>\n        )\n    })\n\n\n    return (\n        <section>\n            <Container>\n\n                <h3 className=\"fav__section-title\">Things I enjoy when not coding…</h3>\n                <Row className=\"justify-content-md-center\">\n                    {populatedCards}\n\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default FavoriteThings;","import React from 'react';\nimport './style.css';\nimport Header from '../../components/Header';\nimport Bio from '../../components/Bio';\nimport Skills from '../../components/Skills';\nimport ContactForm from '../../components/ContactForm';\nimport FavoriteThings from '../../components/FavoriteThings';\n\n\n\n\nfunction About() {\n\n\n    return (\n        <>\n            <Header\n                title=\"About\"\n                subTitleOne=\"Geh-doll-yuh\"\n                subTitleTwo=\"Him/He\"\n            />\n            <Bio />\n            <FavoriteThings />\n            <Skills />\n            <ContactForm />\n        </>\n    )\n}\n\n\nexport default About;","import React from 'react';\nimport './style.css';\nimport Header from '../../components/Header';\n\n// This is static top section of the page and gives it semantic value.\nfunction NotFound() {\n    return (\n        <div className=\"g__footer-pin\">\n            <Header\n                title=\"404\"\n                subTitleOne={`Oops! Looks like this page does not exist or is under maintenance.`}\n            />\n           \n        </div>\n    )\n}\n\n\nexport default NotFound;","import React, { useEffect, useRef } from 'react';\nimport './style.css';\nimport { gsap } from \"gsap\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FaGithub, FaLinkedinIn, FaBehance } from 'react-icons/fa';\nimport { FiArrowUpRight } from 'react-icons/fi';\nimport resumeFile from \"../../gedalya-krycer-resume.pdf\";\nimport { usePortfolioContext } from '../../utils/PortfolioContext';\n\n// This is static top section of the page and gives it semantic value.\nfunction TopNavbar() {\n    // Imports states from context\n    const { toggleBurgerMenu, setToggleBurgerMenu } = usePortfolioContext();\n\n    // Toggles if the nav button is open or closes animation\n    const handleBurgerMenu = () => {\n        toggleBurgerMenu ? setToggleBurgerMenu(false) : setToggleBurgerMenu(true);\n    }\n\n\n    // Closes the nav button if a link is clicked \n    const handleLinkClick = (e) => {\n        setToggleBurgerMenu(true)\n    }\n\n\n\n    // GSAP ANIMATIONS\n    const tl = gsap.timeline();\n\n    // Ref for logo\n    const navContainerRef = useRef(null);\n\n    // Ref for logo\n    const logoRef = useRef(null);\n\n    // Ref for left links\n    const leftLinksRef = useRef(null);\n\n    // Ref for resume button\n    const resumeButtonRef = useRef(null);\n\n    // Ref for mobile social links\n    const mobileSocialRef = useRef(null);\n\n\n    useEffect(() => {\n\n        tl.from(navContainerRef.current, {\n            duration: 1,\n            autoAlpha: 0,\n            y: -20,\n            ease: 'back.out(2)'\n        })\n\n        tl.from(logoRef.current, {\n            duration: 1,\n            autoAlpha: 0,\n            y: -20,\n            ease: 'back.out(2)'\n        }, '-=.7')\n\n        tl.from(leftLinksRef.current, {\n            duration: .5,\n            autoAlpha: 0,\n            y: -20,\n            ease: 'back.out(2)',\n        }, '-=.7')\n\n        tl.from(resumeButtonRef.current, {\n            duration: .5,\n            autoAlpha: 0,\n            y: -20,\n            ease: 'back.out(2)',\n        }, '-=.8')\n\n        tl.from(mobileSocialRef.current, {\n            duration: .5,\n            autoAlpha: 0,\n            y: -20,\n            ease: 'back.out(2)',\n        }, '-=.8')\n\n\n    }, [tl])\n\n\n    return (\n        <div className=\"sticky-top nav__container\" ref={navContainerRef}>\n\n\n            <Navbar collapseOnSelect expand=\"md\">\n\n                <LinkContainer to=\"/\" className=\"d-md-none\">\n                    <Navbar.Brand>\n                        <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo-white.svg\" alt=\"GK Logo\" className=\"nav__logo-mobile\" />\n                    </Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" >\n                    <div onClick={handleBurgerMenu}\n                        className={`nav__toggle-btn ${!toggleBurgerMenu ? \"open\" : null}`}>\n                        <div className=\"nav__toggle-btn__burger\">\n                        </div>\n                    </div>\n                </Navbar.Toggle>\n\n\n\n                <Navbar.Collapse id=\"responsive-navbar-nav\" ref={leftLinksRef}>\n                    <Nav className=\"mr-auto\" >\n                        <LinkContainer to=\"/\" onClick={handleLinkClick}>\n                            <Nav.Link>Dev</Nav.Link>\n                        </LinkContainer>\n                        <Nav.Link href=\"http://gedalya.myportfolio.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Design <FiArrowUpRight /> </Nav.Link>\n                        <LinkContainer to=\"/about\" onClick={handleLinkClick}>\n                            <Nav.Link>About</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Navbar.Collapse>\n                <LinkContainer\n                    to=\"/\"\n                    className=\"d-none d-md-block\">\n                    <Navbar.Brand>\n                        <img ref={logoRef} src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo-white.svg\" alt=\"GK Logo\" className=\"nav__logo-desktop\" />\n                    </Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Collapse className=\"g_justify-end nav__dropdown-vh\">\n                    <Nav className=\"nav__social\" ref={mobileSocialRef}>\n                        <div className=\"nav__social--display\">\n                            <Nav.Link href=\"https://www.linkedin.com/in/gedalyakrycer/\" target=\"_blank\" rel=\"noopener noreferrer\"><FaLinkedinIn /></Nav.Link>\n                            <Nav.Link href=\"https://github.com/GedalyaKrycer\" target=\"_blank\" rel=\"noopener noreferrer\" ><FaGithub /></Nav.Link>\n                            <Nav.Link href=\"https://www.behance.net/gedalyakrycer\" target=\"_blank\" rel=\"noopener noreferrer\"><FaBehance /></Nav.Link>\n                        </div>\n\n\n                    </Nav>\n                    <a ref={resumeButtonRef}\n                        href={resumeFile}\n                        download={true}\n                        className=\"nav__resume\"><h6>View Resume</h6></a>\n                </Navbar.Collapse>\n\n\n\n            </Navbar>\n        </div>\n    )\n}\n\n\nexport default TopNavbar;","import React from 'react';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FaGithub, FaLinkedinIn, FaBehance, FaReact, FaFigma } from 'react-icons/fa';\nimport './style.css';\nimport resumeFile from \"../../gedalya-krycer-resume.pdf\";\n\n// This is static top section of the page and gives it semantic value.\nfunction TopNavbar() {\n    return (\n        <footer >\n            <div className=\"footer__content-container\">\n                <LinkContainer to=\"/\">\n                    <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo.svg\" alt=\"GK Logo\" className=\"footer__logo\" />\n                </LinkContainer>\n\n\n                <a href={resumeFile} download={true} className=\"footer__resume \"><h6>View Resume</h6></a>\n\n\n                <div className=\"footer__social-icons-container\">\n                    <a href=\"https://www.linkedin.com/in/gedalyakrycer/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__social-icons\"><FaLinkedinIn /></a>\n                    <a href=\"https://github.com/GedalyaKrycer\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__social-icons\"><FaGithub /></a>\n                    <a href=\"https://www.behance.net/gedalyakrycer\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__social-icons\"><FaBehance /></a>\n\n                </div>\n            </div>\n\n\n            <a href=\"https://github.com/GedalyaKrycer/gedalyakrycer.github.io\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__built-with\"><h6>Built with <span role=\"img\" className=\"footer__emoji\" aria-label=\"Sparkling Heart\">💖</span> <FaReact className=\"footer__react\" /><FaFigma className=\"footer__figma\" /> </h6></a>\n\n\n\n\n        </footer>\n    )\n}\n\n\nexport default TopNavbar;","import React, { useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { PortfolioProvider } from './utils/PortfolioContext';\nimport Home from \"./pages/Home\";\nimport GithubPin from \"./components/GithubPin\";\nimport ContactPin from \"./components/ContactPin\";\nimport About from \"./pages/About\";\nimport NotFound from \"./pages/NotFound\";\nimport TopNavbar from \"./components/TopNavbar\";\nimport Footer from \"./components/Footer\";\nimport ReactGA from 'react-ga';\nimport { gsap } from \"gsap\";\n\n\nfunction App() {\n  // Google Analytics Page Tracking\n  useEffect(() => {\n    ReactGA.initialize('UA-122656834-1');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, [])\n\n  // GSAP ANIMATIONS\n  const tl = gsap.timeline();\n\n  // Ref for right pin border\n  const rightPinRef = useRef(null);\n\n  // Ref for left pin border\n  const leftPinRef = useRef(null);\n\n  useEffect(() => {\n\n    tl.from(rightPinRef.current, {\n      duration: 1,\n      autoAlpha: 0,\n      x: 20,\n      ease: 'back.out(2)',\n      delay: 1.3\n    })\n\n    tl.from(leftPinRef.current, {\n      duration: 1,\n      autoAlpha: 0,\n      x: -20,\n      ease: 'back.out(2)',\n    }, '-=1.3')\n\n\n  }, [tl])\n\n\n  return (\n    <Router>\n      <PortfolioProvider>\n        <TopNavbar />\n\n        <main>\n          <div className=\"g__frame-left\" ref={leftPinRef}></div>\n          <GithubPin />\n          <div className=\"g__frame-right\" ref={rightPinRef}></div>\n          <ContactPin  />\n          <Switch>\n\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about\" component={About} />\n            <NotFound />\n          </Switch>\n        </main>\n\n        <Footer />\n      </PortfolioProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/gedalya-krycer-resume.a24317c3.pdf\";","module.exports = __webpack_public_path__ + \"static/media/motion-design-web.ed11b604.mp4\";","module.exports = __webpack_public_path__ + \"static/media/motion-design-web.ad28a9aa.webp\";","module.exports = __webpack_public_path__ + \"static/media/figma-thumbnail.e4e4f43b.jpg\";"],"sourceRoot":""}