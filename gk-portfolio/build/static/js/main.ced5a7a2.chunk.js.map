{"version":3,"sources":["components/Header/index.js","components/DevProjectCard/index.js","components/DevPortfolio/index.js","components/DesignProjectCard/index.js","components/DesignPortfolio/index.js","pages/Home/index.js","components/Bio/index.js","components/ContactForm/index.js","pages/About/index.js","components/TopNavbar/index.js","components/Footer/index.js","App.js","index.js"],"names":["Header","title","subTitleOne","subTitleTwo","className","DevProjectCard","img","tech","deployLink","repoLink","useState","cardSlide","setCardSlide","tabIndex","onClick","src","alt","href","target","rel","DevPortfolio","Container","Row","projects","map","project","key","id","DesignPortfolio","DesignProjectCard","Home","Bio","Col","lg","ContactForm","errMsg","setErrMsg","executing","setExecuting","formValues","setFormValues","formReset","setFormReset","loaded","setLoaded","msgSent","setMsgSent","rcError","setRcError","isSubmitting","setIsSubmitting","token","setToken","verified","setVerified","rcRef","useRef","useEffect","a","data","options","method","headers","qs","stringify","url","axios","message","handleSubmit","onError","console","log","onExpire","resetReCaptcha","onVerify","resetEverything","resetForm","current","reset","initialValues","email","username","validate","values","errors","test","name","onSubmit","execute","data-netlify","data-netlify-honeypot","data-netlify-recaptcha","noValidate","type","htmlFor","component","ref","sitekey","onLoad","size","disabled","renderButton","About","TopNavbar","Navbar","collapseOnSelect","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","App","exact","path","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ced5a7a2.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\n// This is static top section of the page and gives it semantic value.\nfunction Header({title, subTitleOne, subTitleTwo}) {\n    return (\n        <header>\n            <h1 className=\"white-color\">{title}</h1>\n            <hr />\n            <h3 className=\"white-color\">{subTitleOne}</h3>\n            <h3 className=\"white-color\">{subTitleTwo}</h3>\n        </header>\n    )\n}\n\n\nexport default Header;","import React, { useState } from 'react';\nimport './style.css';\nimport { FaGithub, FaDesktop } from 'react-icons/fa';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction DevProjectCard({ img, title, tech, deployLink, repoLink }) {\n\n    const [cardSlide, setCardSlide] = useState(false);\n\n    const cardSlider = () => !cardSlide ? setCardSlide(true) : setCardSlide(false);\n\n    return (\n        <div className=\"projects-container\">\n            <button tabIndex=\"0\" className={`cardSlide ${cardSlide ? \"cardSlideUp\" : \"\"}`} onClick={cardSlider}>\n                <img src={img} alt={title} className=\"project-img\" />\n            </button>\n\n            <div className=\"meta-container white-color\">\n                <div className=\"project-links\">\n                    <a href={deployLink}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\" className=\"button\">\n                        <FaDesktop />\n                        <h5>View Deployed</h5>\n                    </a>\n                    <a href={repoLink}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\" className=\"button\">\n                        <FaGithub />\n                        <h5>View Repo</h5>\n                    </a>\n                </div>\n                <div>\n                    <h4>{title}</h4>\n                    <h5>{tech}</h5>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default DevProjectCard;\n","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport DevProjectCard from '../../components/DevProjectCard';\nimport projects from '../../projects.json';\n\n// This is static top section of the page and gives it semantic value.\nfunction DevPortfolio() {\n    return (\n        <section>\n            <Container>\n                <h2>Development</h2>\n\n                <Row className=\"justify-content-around negative-margin\">\n\n                    {projects.map(project => (\n                        <DevProjectCard\n                            key={project.id}\n                            img={project.img}\n                            title={project.title}\n                            tech={project.tech}\n                            deployLink={project.deployLink}\n                            repoLink={project.repoLink}\n                        />\n                    ))}\n\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default DevPortfolio;","import React from 'react';\nimport './style.css';\nimport { FaArrowRight } from 'react-icons/fa';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction DesignPortfolio() {\n\n\n\n    return (\n        <div className=\"design-projects-container\">\n            <a href=\"http://gedalya.myportfolio.com/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\" >\n                <div className=\"cardSlide designCardSlide\">\n                    <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/react/gk-portfolio/public/assets/images/img-links/portfolio/motion-design-web.gif\" alt=\"Design animations\" className=\"project-img\" />\n                </div>\n\n                <div className=\"meta-container white-color design__contain\">\n\n                    <h4 className=\"design__text\">View Design Projects</h4>\n                    <FaArrowRight className=\"design__icon\" />\n                </div>\n            </a>\n        </div>\n\n    )\n}\n\n\nexport default DesignPortfolio;","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport DesignProjectCard from '../../components/DesignProjectCard';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction DevPortfolio() {\n    return (\n        <section className=\"section-margin\">\n            <Container>\n                <h2>Design</h2>\n\n                <Row className=\"justify-content-around negative-margin\">\n                    <DesignProjectCard />\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default DevPortfolio;","import React from 'react';\nimport './style.css';\nimport Header from '../../components/Header';\nimport DevPortfolio from '../../components/DevPortfolio';\nimport DesignPortfolio from '../../components/DesignPortfolio';\n\n// This is static top section of the page and gives it semantic value.\nfunction Home() {\n    return (\n        <>\n            <Header\n                title=\"Hi, I’m Gedalya, a front-end developer and creative.\"\n                subTitleOne=\"I organize details — through code, design, motion and photography.\"\n            />\n            <DevPortfolio />\n            <DesignPortfolio />\n           \n        </>\n    )\n}\n\n\nexport default Home;","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n// This is static top section of the page and gives it semantic value.\nfunction Bio() {\n    return (\n        <section>\n            <Container>\n                <h2>Bio</h2>\n\n                <Row className=\"justify-content-md-center negative-margin\">\n                    <Col className=\"white-color\" lg={8}>\n                        <p>\n                            I am a Vegas-based front-end developer and creative. I obsess over the details and love learning new technologies. (I also obsess over movies and love everything from superhero blockbusters to romcoms.)\n                        </p>\n                        <p>\n                            I recently left my agency job as a Digital Design Director to follow my true passion—building websites from the ground up.\n                        </p>\n                        <p>\n                            I am attending the University of Arizona's Coding Bootcamp, for certification in Full Stack Development.\n\n                        </p>\n                        <p>\n                            With this deeper understanding of how to build quality sites, I look forward to changing careers to web development, built on a strong design foundation.\n                        </p>\n                    </Col>\n                </Row>\n                \n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default Bio;","import React, { useRef, useEffect, useState } from \"react\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport Reaptcha from \"reaptcha\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './style.css';\n\n\n\n\n\n\n// This is static top section of the page and gives it semantic value.\nfunction ContactForm() {\n\n    // START Code Copied From https://github.com/kimfucious/netlify-forms-formik/blob/master/src/FormikForm.js#L7\n    //\n    const [errMsg, setErrMsg] = useState(\"\");\n    const [executing, setExecuting] = useState(false);\n    const [formValues, setFormValues] = useState({});\n    const [formReset, setFormReset] = useState({});\n    const [loaded, setLoaded] = useState(false);\n    const [msgSent, setMsgSent] = useState(false);\n    const [rcError, setRcError] = useState(\"\");\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [token, setToken] = useState(\"\");\n    const [verified, setVerified] = useState(false);\n\n    const rcRef = useRef(null);\n\n\n    useEffect(() => {\n        const handleSubmit = async (formValues, token) => {\n            const data = {\n                ...formValues,\n                \"g-recaptcha-response\": token\n            };\n            const options = {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n                data: qs.stringify(data),\n                url: \"/\"\n            };\n            try {\n                await axios(options);\n                setMsgSent(true);\n                formReset();\n            } catch (e) {\n                setErrMsg(e.message);\n            }\n        };\n        if (token) {\n            handleSubmit(formValues, token);\n        }\n    }, [formReset, formValues, token]);\n\n    const onError = () => {\n        console.log(\"error...\");\n        setRcError(true);\n    };\n\n    const onExpire = () => {\n        console.log(\"expired...\");\n        console.log(\"resetting...\");\n        resetReCaptcha();\n    };\n\n    const onLoad = resetForm => {\n        console.log(\"loaded...\");\n        setLoaded(true);\n        setFormReset(resetForm);\n    };\n\n    const onVerify = token => {\n        console.log(\"verified...\");\n        setToken(token);\n        setVerified(true);\n        setExecuting(false);\n    };\n\n    const renderButton = (executing, isSubmitting) => {\n        if (errMsg) {\n            return (\n                <button\n                    className=\"btn btn-lg btn-outline-primary mt-3\"\n                    type=\"submit\"\n                    disabled\n                >\n                    Error\n                </button>\n            );\n        } else if (msgSent) {\n            return (\n                <button\n                    className=\"btn btn-lg btn-outline-success mt-3\"\n                    type=\"submit\"\n                    disabled\n                >\n                    Submitted\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className=\"btn btn-lg btn-outline-info mt-3\"\n                    type=\"submit\"\n                    disabled={isSubmitting || executing}\n                >\n                    Submit\n                </button>\n            );\n        }\n    };\n\n    const resetEverything = resetForm => {\n        if (rcError) {\n            setRcError(false);\n        }\n        if (resetForm) {\n            setMsgSent(false);\n            setErrMsg(false);\n            resetForm();\n        }\n        resetReCaptcha();\n    };\n\n    const resetReCaptcha = async () => {\n        console.log(\"resetting...\");\n        await rcRef.current.reset();\n        setVerified(false);\n    };\n\n    // END Code Copied From https://github.com/kimfucious/netlify-forms-formik/blob/master/src/FormikForm.js#L7\n    //\n\n    return (\n        <section>\n            <Container>\n                <Row className=\"justify-content-md-center mt-5\">\n                    <Col className=\"white-color\" lg={8}>\n                        {/* // END Code Copied From https://github.com/kimfucious/netlify-forms-formik/blob/master/src/FormikForm.js#L7\n    // */}\n                        <Formik\n                            initialValues={{\n                                \"bot-field\": \"\",\n                                \"form-name\": \"contact\",\n                                email: \"\",\n                                username: \"\"\n                            }}\n                            validate={values => {\n                                let errors = {};\n                                if (!values.email) {\n                                    errors.email = \"Required\";\n                                } else if (\n                                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                                ) {\n                                    errors.email = \"Invalid email address\";\n                                }\n                                if (!values.name) {\n                                    errors.username = \"Required\";\n                                }\n                                if (!values.message) {\n                                    errors.message = \"Required\";\n                                }\n                                return errors;\n                            }}\n                            onSubmit={values => {\n                                setIsSubmitting(true);\n                                setFormValues({ ...values });\n                                setExecuting(true);\n                                rcRef.current.execute();\n                            }}\n                        >\n                            {({ resetForm }) => (\n                                <Form\n                                    data-netlify=\"true\"\n                                    data-netlify-honeypot=\"bot-field\"\n                                    data-netlify-recaptcha=\"true\"\n                                    className=\"d-flex flex-column align-items-center\"\n                                    name=\"contact\"\n                                    noValidate\n                                >\n                                    <Field type=\"hidden\" name=\"form-name\" />\n                                    <Field type=\"hidden\" name=\"bot-field\" />\n                                    <div className=\"form-group\">\n                                        <label\n                                            className=\"col-form-label col-form-label-lg\"\n                                            htmlFor=\"username\"\n                                        >\n                                            Name\n              </label>\n                                        <Field\n                                            className=\"form-control form-control-lg\"\n                                            name=\"name\"\n                                            type=\"text\"\n                                        />\n                                        <ErrorMessage\n                                            className=\"invalid-feedback\"\n                                            name=\"name\"\n                                            component=\"div\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label\n                                            className=\"col-form-label col-form-label-lg\"\n                                            htmlFor=\"email\"\n                                        >\n                                            Email\n              </label>\n                                        <Field\n                                            className=\"form-control form-control-lg\"\n                                            name=\"email\"\n                                            type=\"email\"\n                                        />\n                                        <ErrorMessage\n                                            className=\"invalid-feedback\"\n                                            name=\"email\"\n                                            component=\"div\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label\n                                            className=\"col-form-label col-form-label-lg\"\n                                            htmlFor=\"message\"\n                                        >\n                                            Message\n              </label>\n                                        <Field\n                                            className=\"form-control form-control-lg\"\n                                            name=\"message\"\n                                            component=\"textarea\"\n                                        />\n                                        <ErrorMessage\n                                            className=\"invalid-feedback\"\n                                            name=\"message\"\n                                            component=\"div\"\n                                        />\n                                    </div>\n                                    <Reaptcha\n                                        ref={rcRef}\n                                        sitekey=\"6LdZTMMZAAAAAGJy0j2AyImgkQ33Mv4juhtQElid\"\n                                        data-netlify-recaptcha=\"true\"\n                                        onError={onError}\n                                        onExpire={onExpire}\n                                        onVerify={onVerify}\n                                        onLoad={() => onLoad(() => resetForm)}\n                                        size=\"invisible\"\n                                    />\n                                    <div className=\"m-2 col-form-label col-form-label-lg\">\n                                        <span className=\"mr-1\">ReCaptcha status:</span>\n                                        <br className=\"d-block d-sm-none mt-1\" />\n                                        <span\n                                            className={`badge badge-${\n                                                loaded ? \"success\" : \"primary\"\n                                                } mx-2 p-2`}\n                                        >\n                                            loaded\n              </span>\n                                        <span\n                                            className={`badge badge-${\n                                                verified ? \"success\" : \"primary\"\n                                                } mx-2 p-2`}\n                                        >\n                                            verified\n              </span>\n                                        {executing && (\n                                            <span className={`badge badge-primary mx-2 p-2`}>\n                                                executing\n                                            </span>\n                                        )}\n                                        {rcError && (\n                                            <span className={`badge badge-primary mx-2 p-2`}>error</span>\n                                        )}\n                                        {rcError && (\n                                            <button\n                                                className=\"btn btn-link text-dark\"\n                                                onClick={() => resetEverything(resetForm)}\n                                            >\n                                                reset\n                                            </button>\n                                        )}\n                                    </div>\n                                    {renderButton(isSubmitting, executing, verified)}\n                                    {errMsg ? <div className=\"text-primary m-1\">{errMsg}</div> : null}\n                                    {(msgSent || errMsg) && (\n                                        <button\n                                            className=\"btn btn-lg btn-link text-dark\"\n                                            onClick={() => resetEverything(resetForm)}\n                                        >\n                                            reset form\n                                        </button>\n                                    )}\n                                </Form>\n                            )}\n                        </Formik>\n\n                        {/* // END Code Copied From https://github.com/kimfucious/netlify-forms-formik/blob/master/src/FormikForm.js#L7\n    // */}\n\n\n\n                        {/* <form name=\"contact\" method=\"POST\">\n\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"inputName\">Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputName\" aria-describedby=\"inputName\" placeholder=\"John Smith\" name=\"name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"inputEmail\">Email address</label>\n                                <input type=\"email\" className=\"form-control\" id=\"inputEmail\" aria-describedby=\"inputEmail\" placeholder=\"example@gmail.com\" name=\"email\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"inputTextArea\">Message</label>\n                                <textarea className=\"form-control\" id=\"inputTextArea\" rows=\"3\" name=\"message\"></textarea>\n                            </div>\n\n\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                        </form> */}\n                    </Col>\n                </Row>\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default ContactForm;","import React from 'react';\nimport './style.css';\nimport Header from '../../components/Header';\nimport Bio from '../../components/Bio';\nimport ContactForm from '../../components/ContactForm';\n\n// This is static top section of the page and gives it semantic value.\nfunction About() {\n    return (\n        <>\n            <Header\n                title=\"About\"\n                subTitleOne=\"Geh-doll-yuh\"\n                subTitleTwo=\"Him/He\"\n            />\n            <Bio />\n            <ContactForm />\n        </>\n    )\n}\n\n\nexport default About;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FaGithub, FaLinkedinIn, FaBehance } from 'react-icons/fa';\nimport { FiArrowUpRight } from 'react-icons/fi';\nimport './style.css';\n\n// This is static top section of the page and gives it semantic value.\nfunction TopNavbar() {\n    return (\n        <Navbar collapseOnSelect expand=\"md\">\n            \n            <LinkContainer to=\"/\" className=\"d-md-none\">\n                <Navbar.Brand>\n                    <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo-white.svg\" alt=\"GK Logo\" className=\"nav__logo-mobile\" />\n                </Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <LinkContainer to=\"/\">\n                        <Nav.Link >Dev</Nav.Link>\n                    </LinkContainer>\n                    <Nav.Link href=\"http://gedalya.myportfolio.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Design <FiArrowUpRight /> </Nav.Link>\n                    <LinkContainer to=\"/about\">\n                    <Nav.Link>About</Nav.Link>\n                    </LinkContainer>\n                </Nav>\n            </Navbar.Collapse>\n            <LinkContainer to=\"/\" className=\"d-none d-md-block\">\n                <Navbar.Brand>\n                    <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo-white.svg\" alt=\"GK Logo\" className=\"nav__logo-desktop\" />\n                </Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Collapse className=\"justify-end\">\n                <Nav className=\"nav__social\">\n                    <Nav.Link href=\"https://www.linkedin.com/in/gedalyakrycer/\" target=\"_blank\" rel=\"noopener noreferrer\"><FaLinkedinIn/></Nav.Link>\n                    <Nav.Link href=\"https://github.com/GedalyaKrycer\" target=\"_blank\" rel=\"noopener noreferrer\" ><FaGithub /></Nav.Link>\n                    <Nav.Link href=\"https://www.behance.net/gedalyakrycer\" target=\"_blank\" rel=\"noopener noreferrer\"><FaBehance /></Nav.Link>\n\n                </Nav>\n            </Navbar.Collapse>\n            \n\n\n        </Navbar>\n    )\n}\n\n\nexport default TopNavbar;","import React from 'react';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FaGithub, FaLinkedinIn, FaBehance } from 'react-icons/fa';\nimport './style.css';\n\n// This is static top section of the page and gives it semantic value.\nfunction TopNavbar() {\n    return (\n        <footer className=\"d-flex justify-content-between\">\n\n            <a href=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/react/gk-portfolio/public/assets/pdfs/Gedalya%20Krycer%20Resume.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"resume\"><h6>Download Resume</h6></a>\n\n\n            <LinkContainer to=\"/\">\n                <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo.svg\" alt=\"GK Logo\" />\n            </LinkContainer>\n\n            <div className=\"d-flex justify-content-md-between\">\n                <a href=\"https://www.linkedin.com/in/gedalyakrycer/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social\"><FaLinkedinIn /></a>\n                <a href=\"https://github.com/GedalyaKrycer\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social\"><FaGithub /></a>\n                <a href=\"https://www.behance.net/gedalyakrycer\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social\"><FaBehance /></a>\n\n            </div>\n\n        </footer>\n    )\n}\n\n\nexport default TopNavbar;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport TopNavbar from \"./components/TopNavbar\";\nimport Footer from \"./components/Footer\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <TopNavbar />\n\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}