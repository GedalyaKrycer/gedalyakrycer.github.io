{"version":3,"sources":["components/Header/index.js","components/DevProjectCard/index.js","components/DevPortfolio/index.js","components/DesignProjectCard/index.js","components/DesignPortfolio/index.js","pages/Home/index.js","components/Bio/index.js","components/TechButton/index.js","components/TechFilter/index.js","components/Skills/index.js","components/ContactForm/index.js","pages/About/index.js","pages/NotFound/index.js","components/TopNavbar/index.js","components/Footer/index.js","App.js","index.js","motion-design-web.mp4","motion-design-web.webp","figma-thumbnail.jpg","gedalya-krycer-resume.pdf"],"names":["Header","title","subTitleOne","subTitleTwo","className","CustomToggle","children","eventKey","useState","cardSlide","setCardSlide","decoratedOnClick","useAccordionToggle","onClick","DevProjectCard","img","tech","deployLink","repoLink","techStyler","split","forEach","element","push","key","uuidv4","Accordion","Card","src","alt","Collapse","Body","href","target","rel","DevPortfolio","Container","Row","projects","map","project","id","DesignPortfolio","autoPlay","loop","muted","playsInline","videoWebp","type","videoMp4","figmaThumbnail","DesignProjectCard","Home","Bio","Col","lg","TechButton","name","link","svg","classType","setClassType","useEffect","TechFilter","handleDevFilter","handleDesignFilter","handleLearnFilter","devFilterActive","designFilterActive","learnFilterActive","handleResetFilter","resetFilterActive","Skills","techArray","setTechArray","setDevFilterActive","setDesignFilterActive","setLearnFilterActive","setResetFilterActive","filter","techType","includes","technology","ContactForm","errMsg","setErrMsg","executing","setExecuting","formValues","setFormValues","formReset","setFormReset","loaded","setLoaded","msgSent","setMsgSent","rcError","setRcError","isSubmitting","setIsSubmitting","token","setToken","verified","setVerified","rcRef","useRef","a","data","options","method","headers","qs","stringify","url","axios","message","handleSubmit","onError","console","log","onExpire","resetReCaptcha","onVerify","resetEverything","resetForm","current","reset","initialValues","email","validate","values","errors","test","onSubmit","execute","data-netlify","data-netlify-honeypot","data-netlify-recaptcha","noValidate","htmlFor","component","ref","sitekey","onLoad","size","disabled","renderButton","About","NotFound","TopNavbar","Navbar","collapseOnSelect","expand","to","Brand","Toggle","aria-controls","Nav","Link","resumeFile","download","role","aria-label","App","ReactGA","initialize","pageview","window","location","pathname","search","exact","path","Footer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3ea03755.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\n// This is static top section of the page and gives it semantic value.\nfunction Header({title, subTitleOne, subTitleTwo}) {\n    return (\n        <header>\n            <h1 className=\"g_white-color\">{title}</h1>\n            <hr />\n            <h3 className=\"header__sub-title\">{subTitleOne}</h3>\n            <h3 className=\"header__sub-title\">{subTitleTwo}</h3>\n        </header>\n    )\n}\n\n\nexport default Header;","import React, { useState } from 'react';\nimport './style.css';\nimport { FaGithub, FaDesktop } from 'react-icons/fa';\nimport { v4 as uuidv4 } from 'uuid';\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nfunction CustomToggle({ children, eventKey }) {\n\n\n    const [cardSlide, setCardSlide] = useState(false);\n\n\n    // Expands Accordion and Reveals Thumbnail\n    // ==================================================================\n    const decoratedOnClick = useAccordionToggle(eventKey, () => {\n        !cardSlide ? setCardSlide(true) : setCardSlide(false);\n    });\n\n    return (\n        <button\n            onClick={decoratedOnClick}\n            className={`g_card-slide ${cardSlide ? \"g_card-slide-up\" : \"\"}`}\n        >\n            {children}\n        </button>\n    );\n}\n\n\n\n// This is static top section of the page and gives it semantic value.\n// ==================================================================\nfunction DevProjectCard({ img, title, tech, deployLink, repoLink }) {\n\n\n    // Styles tech text to be separates words in pill shapes\n    const techStyler = []\n    const styledTech = tech.split(\", \")\n    styledTech.forEach(element => {\n        techStyler.push(<h5 key={uuidv4()} className=\"dev-project__tech \">{element}</h5>)\n\n    });\n\n\n\n    return (\n        <div className=\"g_projects-container\">\n            <Accordion>\n                <Card>\n                    <div className=\"neumorphism\">\n                        <CustomToggle eventKey=\"0\">\n\n\n                            <img src={img} alt={title} className=\"g_project-img\" />\n                        </CustomToggle>\n                    </div>\n                    <div className=\"g_meta-container dev-project__meta-container\">\n\n\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <h4 className=\"dev-project__title\">{title}</h4>\n\n\n\n                                <div className=\"dev-project__links\">\n                                    {!deployLink ? null : <a href={deployLink}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\" className=\"dev-project__button dev-project__button--half\">\n                                        <FaDesktop />\n                                        <h5>View Deployed</h5>\n                                    </a>}\n\n                                    <a href={repoLink}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\" className={!deployLink ?\n                                            \"dev-project__button dev-project__button--full\" : \"dev-project__button dev-project__button--half\"}>\n                                        <FaGithub />\n                                        <h5>View Repo</h5>\n                                    </a>\n                                </div>\n\n                                <div className=\"dev-project__info\">\n                                    {techStyler}\n                                </div>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </div>\n\n\n                </Card>\n\n            </Accordion>\n\n\n\n\n\n\n\n        </div>\n\n\n    )\n}\n\n\nexport default DevProjectCard;\n","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport DevProjectCard from '../../components/DevProjectCard';\nimport projects from '../../projects.json';\n\n// This is static top section of the page and gives it semantic value.\nfunction DevPortfolio() {\n    return (\n        <section>\n            <Container>\n                <h2>Dev Work</h2>\n\n                <Row className=\"justify-content-around g_negative-margin\">\n\n                    {projects.map(project => (\n                        <DevProjectCard\n                            key={project.id}\n                            img={project.img}\n                            title={project.title}\n                            tech={project.tech}\n                            deployLink={project.deployLink}\n                            repoLink={project.repoLink}\n                        />\n                    ))}\n\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default DevPortfolio;","import React from 'react';\nimport './style.css';\nimport { FaArrowRight } from 'react-icons/fa';\nimport videoMp4 from '../../motion-design-web.mp4';\nimport videoWebp from '../../motion-design-web.webp';\nimport figmaThumbnail from '../../figma-thumbnail.jpg';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction DesignPortfolio() {\n\n\n\n    return (\n        <>\n        <div className=\"design-project__container \">\n            <a href=\"http://gedalya.myportfolio.com/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\" >\n                <div className=\"g__design-project__card-slide\">\n                    <video autoPlay={true} loop={true} muted={true} playsInline={true} className=\"design-project__project-img\">\n                        <source src={videoWebp} type=\"video/webm\" />\n                        <source src={videoMp4} type=\"video/mp4\" />\n                    </video>\n                </div>\n\n                <div className=\"design-project__meta-container\">\n\n                    <h4 className=\"design-project__text\">View design projects</h4>\n                    <FaArrowRight className=\"design-project__icon\" />\n                </div>\n            </a>\n        </div>\n        <div className=\"design-project__container \">\n            <a href=\"https://youtu.be/7nmarPXV2OQ\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\" >\n                <div className=\"g__design-project__card-slide\">\n                    <img src={figmaThumbnail} alt=\"From a Figment to Figma.\" className=\"design-project__project-img\" />\n                   \n                </div>\n\n                <div className=\"design-project__meta-container\">\n\n                    <h4 className=\"design-project__text\">Watch my workshop</h4>\n                    <FaArrowRight className=\"design-project__icon\" />\n                </div>\n            </a>\n        </div>\n        </>\n\n    )\n}\n\n\nexport default DesignPortfolio;","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport DesignProjectCard from '../../components/DesignProjectCard';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction DevPortfolio() {\n    return (\n        <section className=\"design-portfolio__section\">\n            <Container>\n                <h2>Design</h2>\n\n                <Row className=\"justify-content-around g_negative-margin\">\n                    <DesignProjectCard />\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default DevPortfolio;","import React from 'react';\nimport './style.css';\nimport Header from '../../components/Header';\nimport DevPortfolio from '../../components/DevPortfolio';\nimport DesignPortfolio from '../../components/DesignPortfolio';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction Home() {\n    return (\n        <>\n            <Header\n                title=\"Hi, I’m Gedalya, a front-end developer and creative.\"\n                subTitleOne={`I organize details — through code, design, motion and photography.`}\n            />\n            <DevPortfolio />\n            <DesignPortfolio />\n           \n        </>\n    )\n}\n\n\nexport default Home;","import React from 'react';\nimport './style.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n// This is static top section of the page and gives it semantic value.\nfunction Bio() {\n    return (\n        <section>\n            <Container>\n                <h2>Bio</h2>\n\n                <Row className=\"justify-content-md-center g_negative-margin\">\n                    <Col className=\"g_white-color\" lg={8}>\n                        <p>\n                            I am a Vegas-based front-end developer and creative, who obsesses over the details and loves learning new technologies. (I also obsess over movies and love everything from superhero blockbusters to romcoms.)\n                        </p>\n                        <p>\n                            I recently left my agency job as a Digital Design Director to follow my true passion—building websites from the ground up.\n                        </p>\n                        <p>\n                            In September of 2020, I earned a certification in Full Stack Development, from the University of Arizona's 6 month coding bootcamp. I developed a joy for the front-end, focusing on html, css, react.js and am actively growing in the MERN stack.\n\n                        </p>\n                        <p>\n                            With this deeper understanding of how to build quality sites, I look forward to changing careers to web development, built on a strong design foundation.\n                        </p>\n                    </Col>\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default Bio;","import React, { useState, useEffect } from 'react';\nimport './style.css';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction TechButton({ name, link, svg, type }) {\n\n    // State to determine the css class type\n    const [classType, setClassType ] = useState(\"hello\");\n\n    useEffect(() => {\n      if(type === \"dev\") {\n        setClassType(\"tech-btn__btn--dev\");\n      } else if (type === \"design\") {\n        setClassType(\"tech-btn__btn--design\");\n      } else {\n        setClassType(\"tech-btn__btn--learn\")\n      }\n    }, [type])\n\n\n\n    return (\n\n        <a href={link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={`tech-btn__btn ${classType}`}\n        >\n            <img src={svg} alt={name} className={`tech-btn__icon`} />\n            {name}\n        </a>\n\n\n\n    )\n}\n\n\nexport default TechButton;","import React from 'react';\nimport './style.css';\n\n\nfunction TechFilter({ handleDevFilter, handleDesignFilter, handleLearnFilter, devFilterActive, designFilterActive, learnFilterActive, handleResetFilter, resetFilterActive }) {\n\n\n  return (\n\n    <div className=\"tech-filter__container\">\n      <div className=\"tech-filter__nav\">\n        <button className={`tech-filter__nav-dev ${devFilterActive ? \"tech-filter__nav-dev--active\" : null}`}\n          onClick={handleDevFilter}>\n          Coding\n        </button>\n        <button className={`tech-filter__nav-design ${designFilterActive ? \"tech-filter__nav-design--active\" : null}`}\n          onClick={handleDesignFilter}>\n          Design\n        </button>\n        <button className={`tech-filter__nav-learn ${learnFilterActive ? \"tech-filter__nav-learn--active\" : null}`}\n          onClick={handleLearnFilter}>\n          Learning\n        </button>\n        {\n          resetFilterActive ? <button className=\"tech-filter__nav-reset\"\n          onClick={handleResetFilter}>\n          Reset\n        </button> :\n        null\n        }\n        \n      </div>\n    </div>\n\n\n\n  )\n}\n\n\nexport default TechFilter;","import React, { useState } from 'react';\nimport './style.css';\nimport TechButton from '../TechButton';\nimport TechFilter from '../TechFilter';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport tech from '../../tech.json';\n\nfunction Skills() {\n\n    // State to hold which buttons to show\n    const [techArray, setTechArray] = useState(tech);\n\n    // State that determines if a filter has been clicked\n    const [devFilterActive, setDevFilterActive] = useState(false);\n    const [designFilterActive, setDesignFilterActive] = useState(false);\n    const [learnFilterActive, setLearnFilterActive] = useState(false);\n    const [resetFilterActive, setResetFilterActive] = useState(false);\n\n\n\n    // Function to show just the developer tool buttons\n    const handleDevFilter = () => {\n\n        // Checks if nav is already active \n        if (devFilterActive === false) {\n\n            // Show Reset Link\n            setResetFilterActive(true);\n\n            // Sets Dev State to Active and turns the other's off\n            setDevFilterActive(true);\n            setDesignFilterActive(false);\n            setLearnFilterActive(false);\n\n            // Filters out all buttons excepts the dev type\n            setTechArray([...techArray].filter(techType =>\n                techType.type.includes(\"dev\")\n            ))\n\n        } else {\n\n            // Replaces array with the original selection of buttons\n            setTechArray(tech);\n\n            // Removes active styling\n            setDevFilterActive(false);\n        }\n    }\n\n    // Function to show just the Design tool buttons\n    const handleDesignFilter = () => {\n\n        // Checks if nav is already active \n        if (designFilterActive === false) {\n\n            // Show Reset Link\n            setResetFilterActive(true);\n\n\n            // Sets Design State to Active and turns the other's off\n            setDevFilterActive(false);\n            setLearnFilterActive(false);\n            setDesignFilterActive(true);\n\n            // Filters out all buttons excepts the design type\n            setTechArray([...techArray].filter(techType =>\n                techType.type.includes(\"design\")\n            ))\n\n        } else {\n\n            // Replaces array with the original selection of buttons\n            setTechArray(tech);\n\n            // Removes active styling\n            setDesignFilterActive(false);\n        }\n    }\n\n    // Function to show just the Learn tool buttons\n    const handleLearnFilter = () => {\n\n        // Checks if nav is already active \n        if (learnFilterActive === false) {\n\n            // Show Reset Link\n            setResetFilterActive(true);\n\n            // Sets Learn State to Active and turns the other's off\n            setLearnFilterActive(true);\n            setDesignFilterActive(false);\n            setDevFilterActive(false);\n\n            // Filters out all buttons excepts the learn type\n            setTechArray([...techArray].filter(techType =>\n                techType.type.includes(\"learn\")\n            ))\n\n        } else {\n\n            // Replaces array with the original selection of buttons\n            setTechArray(tech);\n\n            // Removes active styling\n            setLearnFilterActive(false);\n        }\n    }\n\n\n    // Function to show just the Learn tool buttons\n    const handleResetFilter = () => {\n        // Replaces array with the original selection of buttons\n        setTechArray(tech);\n\n        if (resetFilterActive === true) {\n            setResetFilterActive(false);\n            setLearnFilterActive(false);\n            setDesignFilterActive(false);\n            setDevFilterActive(false);\n        }\n\n    \n\n    }\n\n    // Helper function to make setting the active states DRYer\n    // const activeSelector = (selector) => {\n    //     switch (selector) {\n    //         case selector === \"dev\":\n    //             setDevFilterActive(true);\n    //             setDesignFilterActive(false);\n    //             setLearnFilterActive(false);\n    //             break;\n    //         case selector === \"design\":\n    //             setDevFilterActive(false);\n    //             setDesignFilterActive(true);\n    //             setLearnFilterActive(false);\n    //             break;\n    //         case selector === \"learn\":\n    //             setDevFilterActive(false);\n    //             setDesignFilterActive(false);\n    //             setLearnFilterActive(true);\n    //             break;\n    //         default:\n    //             setDevFilterActive(false);\n    //             setDesignFilterActive(false);\n    //             setLearnFilterActive(false);\n    //     }\n    // }\n\n\n    return (\n        <section>\n            <Container className=\"g__about-sections\">\n                <h2>Skills</h2>\n\n                <Row className=\"justify-content-md-center g_negative-margin\">\n                    <Col lg={8}>\n                        <p className=\"skills__intro-text\">These are some of the tools I use on projects or currently learning.</p>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg={12} className=\"skills__tech-container\">\n\n                        <TechFilter\n                            devFilterActive={devFilterActive}\n                            designFilterActive={designFilterActive}\n                            learnFilterActive={learnFilterActive}\n                            resetFilterActive={resetFilterActive}\n                            handleDevFilter={handleDevFilter}\n                            handleDesignFilter={handleDesignFilter}\n                            handleLearnFilter={handleLearnFilter}\n                            handleResetFilter={handleResetFilter}\n                        />\n\n                        <div className=\"skills__tech-btn-container\">\n                            {techArray.map(technology => (\n                                <TechButton\n                                    key={technology.id}\n                                    name={technology.name}\n                                    link={technology.link}\n                                    svg={technology.svg}\n                                    type={technology.type}\n\n                                />\n                            ))}\n                        </div>\n\n                    </Col>\n                </Row>\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default Skills;","import React, { useRef, useEffect, useState } from \"react\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport Reaptcha from \"reaptcha\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './style.css';\n\n\n\n\n\n\n// This is static top section of the page and gives it semantic value.\nfunction ContactForm() {\n\n    // START Code Copied From https://github.com/kimfucious/netlify-forms-formik/blob/master/src/FormikForm.js#L7\n    //\n    const [errMsg, setErrMsg] = useState(\"\");\n    const [executing, setExecuting] = useState(false);\n    const [formValues, setFormValues] = useState({});\n    const [formReset, setFormReset] = useState({});\n    const [loaded, setLoaded] = useState(false);\n    const [msgSent, setMsgSent] = useState(false);\n    const [rcError, setRcError] = useState(\"\");\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [token, setToken] = useState(\"\");\n    const [verified, setVerified] = useState(false);\n\n    const rcRef = useRef(null);\n\n\n    useEffect(() => {\n        const handleSubmit = async (formValues, token) => {\n            const data = {\n                ...formValues,\n                \"g-recaptcha-response\": token\n            };\n            const options = {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n                data: qs.stringify(data),\n                url: \"/\"\n            };\n            try {\n                await axios(options);\n                setMsgSent(true);\n                formReset();\n            } catch (e) {\n                setErrMsg(e.message);\n            }\n        };\n        if (token) {\n            handleSubmit(formValues, token);\n        }\n    }, [formReset, formValues, token]);\n\n    const onError = () => {\n        console.log(\"error...\");\n        setRcError(true);\n    };\n\n    const onExpire = () => {\n        console.log(\"expired...\");\n        console.log(\"resetting...\");\n        resetReCaptcha();\n    };\n\n    const onLoad = resetForm => {\n        console.log(\"loaded...\");\n        setLoaded(true);\n        setFormReset(resetForm);\n    };\n\n    const onVerify = token => {\n        console.log(\"verified...\");\n        setToken(token);\n        setVerified(true);\n        setExecuting(false);\n    };\n\n    const renderButton = (executing, isSubmitting) => {\n        if (errMsg) {\n            return (\n                <button\n                    className=\"contact__submit-btn mt-3\"\n                    type=\"submit\"\n                    disabled\n                >\n                    Error\n                </button>\n            );\n        } else if (msgSent) {\n            return (\n                <button\n                    className=\"contact__submit-btn mt-3\"\n                    type=\"submit\"\n                    disabled\n                >\n                    Submitted\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className=\"contact__submit-btn mt-3\"\n                    type=\"submit\"\n                    disabled={isSubmitting || executing}\n                >\n                    Submit\n                </button>\n            );\n        }\n    };\n\n    const resetEverything = resetForm => {\n        if (rcError) {\n            setRcError(false);\n        }\n        if (resetForm) {\n            setMsgSent(false);\n            setErrMsg(false);\n            resetForm();\n        }\n        resetReCaptcha();\n    };\n\n    const resetReCaptcha = async () => {\n        console.log(\"resetting...\");\n        await rcRef.current.reset();\n        setVerified(false);\n    };\n\n    // END Code Copied From https://github.com/kimfucious/netlify-forms-formik/blob/master/src/FormikForm.js#L7\n    //\n\n    return (\n        <section>\n            <Container className=\"g__about-sections\">\n                <h2>Contact</h2>\n                <Row className=\"justify-content-md-center g_negative-margin\">\n                    <Col className=\"white-color\" lg={8}>\n                        <div className=\"contact__form-bg\">\n\n                            <Formik\n                                initialValues={{\n                                    \"bot-field\": \"\",\n                                    \"form-name\": \"contact\",\n                                    email: \"\",\n                                    name: \"\",\n                                    message: \"\"\n                                }}\n                                validate={values => {\n                                    let errors = {};\n                                    if (!values.email) {\n                                        errors.email = \"Required\";\n                                    } else if (\n                                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                                    ) {\n                                        errors.email = \"Invalid email address\";\n                                    }\n                                    if (!values.name) {\n                                        errors.name = \"Required\";\n                                    }\n                                    if (!values.message) {\n                                        errors.message = \"Required\";\n                                    }\n                                    return errors;\n                                }}\n                                onSubmit={values => {\n                                    setIsSubmitting(true);\n                                    setFormValues({ ...values });\n                                    setExecuting(true);\n                                    rcRef.current.execute();\n                                }}\n                            >\n                                {({ resetForm }) => (\n                                    <Form\n                                        data-netlify=\"true\"\n                                        data-netlify-honeypot=\"bot-field\"\n                                        data-netlify-recaptcha=\"true\"\n                                        className=\"d-flex flex-column\"\n                                        name=\"contact\"\n                                        noValidate\n                                    >\n                                        <Field type=\"hidden\" name=\"form-name\" />\n                                        <Field type=\"hidden\" name=\"bot-field\" />\n                                        <div className=\"form-group\">\n                                            <label\n                                                className=\"col-form-label col-form-label-lg\"\n                                                htmlFor=\"name\"\n                                            >\n                                                Name\n                                        </label>\n                                            <Field\n                                                className=\"form-control form-control-lg\"\n                                                name=\"name\"\n                                                type=\"text\"\n                                            />\n                                            <ErrorMessage\n                                                className=\"invalid-feedback\"\n                                                name=\"name\"\n                                                component=\"div\"\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label\n                                                className=\"col-form-label col-form-label-lg\"\n                                                htmlFor=\"email\"\n                                            >\n                                                Email\n                                        </label>\n                                            <Field\n                                                className=\"form-control form-control-lg\"\n                                                name=\"email\"\n                                                type=\"email\"\n                                            />\n                                            <ErrorMessage\n                                                className=\"invalid-feedback\"\n                                                name=\"email\"\n                                                component=\"div\"\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label\n                                                className=\"col-form-label col-form-label-lg\"\n                                                htmlFor=\"message\"\n                                            >\n                                                Message\n                                        </label>\n                                            <Field\n                                                className=\"form-control form-control-lg\"\n                                                name=\"message\"\n                                                component=\"textarea\"\n                                            />\n                                            <ErrorMessage\n                                                className=\"invalid-feedback\"\n                                                name=\"message\"\n                                                component=\"div\"\n                                            />\n                                        </div>\n                                        <Reaptcha\n                                            ref={rcRef}\n                                            sitekey=\"6LdZTMMZAAAAAGJy0j2AyImgkQ33Mv4juhtQElid\"\n                                            data-netlify-recaptcha=\"true\"\n                                            onError={onError}\n                                            onExpire={onExpire}\n                                            onVerify={onVerify}\n                                            onLoad={() => onLoad(() => resetForm)}\n                                            size=\"invisible\"\n                                        />\n                                        <div className=\"m-2 col-form-label col-form-label-lg hidden\">\n                                            <span\n                                                className={`badge badge-${loaded ? \"success\" : \"primary\"\n                                                    } mx-2 p-2`}\n                                            >\n                                                loaded\n              </span>\n                                            <span\n                                                className={`badge badge-${verified ? \"success\" : \"primary\"\n                                                    } mx-2 p-2`}\n                                            >\n                                                verified\n              </span>\n                                            {executing && (\n                                                <span className={`badge badge-primary mx-2 p-2`}>\n                                                    executing\n                                                </span>\n                                            )}\n                                            {rcError && (\n                                                <span className={`badge badge-primary mx-2 p-2`}>error</span>\n                                            )}\n                                            {rcError && (\n                                                <button\n                                                    className=\"btn btn-link text-dark\"\n                                                    onClick={() => resetEverything(resetForm)}\n                                                >\n                                                    reset\n                                                </button>\n                                            )}\n                                        </div>\n                                        {renderButton(isSubmitting, executing, verified)}\n                                        {errMsg ? <div className=\"text-primary m-1\">{errMsg}</div> : null}\n                                        {(msgSent || errMsg) && (\n                                            <button className=\"contact__reset-btn\"\n\n                                                onClick={() => resetEverything(resetForm)}\n                                            >\n                                                Send A New Email\n                                            </button>\n                                        )}\n                                    </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </Col>\n                </Row>\n\n                <div className=\"contact__email-container\">\n                    <h2>or</h2>\n                    <div className=\"contact__email-txt\">\n                        <p>You can email me at</p>\n\n                        <p>\n                            <a href=\"mailto:gedalya@krycer.com\">\n                                gedalya@krycer.com\n                        </a>\n                        </p>\n                    </div>\n\n                </div>\n            </Container>\n\n        </section >\n    )\n}\n\n\nexport default ContactForm;","import React from 'react';\nimport './style.css';\nimport Header from '../../components/Header';\nimport Bio from '../../components/Bio';\nimport Skills from '../../components/Skills';\nimport ContactForm from '../../components/ContactForm';\n\n// This is static top section of the page and gives it semantic value.\nfunction About() {\n    return (\n        <>\n            <Header\n                title=\"About\"\n                subTitleOne=\"Geh-doll-yuh\"\n                subTitleTwo=\"Him/He\"\n            />\n            <Bio />\n            <Skills />\n            <ContactForm />\n        </>\n    )\n}\n\n\nexport default About;","import React from 'react';\nimport './style.css';\nimport Header from '../../components/Header';\n\n// This is static top section of the page and gives it semantic value.\nfunction NotFound() {\n    return (\n        <div className=\"g__footer-pin\">\n            <Header\n                title=\"404\"\n                subTitleOne={`Oops! Looks like this page does not exist or is under maintenance.`}\n            />\n           \n        </div>\n    )\n}\n\n\nexport default NotFound;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FaGithub, FaLinkedinIn, FaBehance } from 'react-icons/fa';\nimport { FiArrowUpRight } from 'react-icons/fi';\nimport './style.css';\n\n// This is static top section of the page and gives it semantic value.\nfunction TopNavbar() {\n    return (\n        <Navbar collapseOnSelect expand=\"md\">\n            \n            <LinkContainer to=\"/\" className=\"d-md-none\">\n                <Navbar.Brand>\n                    <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo-white.svg\" alt=\"GK Logo\" className=\"nav__logo-mobile\" />\n                </Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <LinkContainer to=\"/\">\n                        <Nav.Link >Dev</Nav.Link>\n                    </LinkContainer>\n                    <Nav.Link href=\"http://gedalya.myportfolio.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Design <FiArrowUpRight /> </Nav.Link>\n                    <LinkContainer to=\"/about\">\n                    <Nav.Link>About</Nav.Link>\n                    </LinkContainer>\n                </Nav>\n            </Navbar.Collapse>\n            <LinkContainer to=\"/\" className=\"d-none d-md-block\">\n                <Navbar.Brand>\n                    <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo-white.svg\" alt=\"GK Logo\" className=\"nav__logo-desktop\" />\n                </Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Collapse className=\"g_justify-end\">\n                <Nav className=\"nav__social\">\n                    <Nav.Link href=\"https://www.linkedin.com/in/gedalyakrycer/\" target=\"_blank\" rel=\"noopener noreferrer\"><FaLinkedinIn/></Nav.Link>\n                    <Nav.Link href=\"https://github.com/GedalyaKrycer\" target=\"_blank\" rel=\"noopener noreferrer\" ><FaGithub /></Nav.Link>\n                    <Nav.Link href=\"https://www.behance.net/gedalyakrycer\" target=\"_blank\" rel=\"noopener noreferrer\"><FaBehance /></Nav.Link>\n\n                </Nav>\n            </Navbar.Collapse>\n            \n\n\n        </Navbar>\n    )\n}\n\n\nexport default TopNavbar;","import React from 'react';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FaGithub, FaLinkedinIn, FaBehance, FaReact, FaFigma } from 'react-icons/fa';\nimport './style.css';\nimport resumeFile from \"../../gedalya-krycer-resume.pdf\"\n\n// This is static top section of the page and gives it semantic value.\nfunction TopNavbar() {\n    return (\n        <footer >\n            <div className=\"footer__content-container\">\n                <LinkContainer to=\"/\">\n                    <img src=\"https://raw.githubusercontent.com/GedalyaKrycer/gedalyakrycer.github.io/46e78fe53858d535b8db1d9e7e42455fa0a8b090/gk-portfolio/public/assets/images/img-links/gk-logo.svg\" alt=\"GK Logo\" className=\"footer__logo\" />\n                </LinkContainer>\n\n\n                <a href={resumeFile} download={true} className=\"footer__resume \"><h6>View Resume</h6></a>\n\n\n                <div className=\"footer__social-icons-container\">\n                    <a href=\"https://www.linkedin.com/in/gedalyakrycer/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__social-icons\"><FaLinkedinIn /></a>\n                    <a href=\"https://github.com/GedalyaKrycer\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__social-icons\"><FaGithub /></a>\n                    <a href=\"https://www.behance.net/gedalyakrycer\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__social-icons\"><FaBehance /></a>\n\n                </div>\n            </div>\n\n\n            <a href=\"https://github.com/GedalyaKrycer/gedalyakrycer.github.io\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer__built-with\"><h6>Built with <span role=\"img\" className=\"footer__emoji\" aria-label=\"Sparkling Heart\">💖</span> <FaReact className=\"footer__react\" /><FaFigma className=\"footer__figma\" /> </h6></a>\n\n\n\n\n        </footer>\n    )\n}\n\n\nexport default TopNavbar;","import React, {useEffect} from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport NotFound from \"./pages/NotFound\";\nimport TopNavbar from \"./components/TopNavbar\";\nimport Footer from \"./components/Footer\";\nimport ReactGA from 'react-ga';\n\n\nfunction App() {\n  // Google Analytics Page Tracking\n  useEffect(() => {\n    ReactGA.initialize('UA-122656834-1');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, [])\n  return (\n    <Router>\n\n      <TopNavbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <NotFound />\n      </Switch>\n\n      <Footer />\n\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/motion-design-web.ed11b604.mp4\";","module.exports = __webpack_public_path__ + \"static/media/motion-design-web.ad28a9aa.webp\";","module.exports = __webpack_public_path__ + \"static/media/figma-thumbnail.e4e4f43b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gedalya-krycer-resume.a24317c3.pdf\";"],"sourceRoot":""}