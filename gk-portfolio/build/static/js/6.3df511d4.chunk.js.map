{"version":3,"sources":["components/articles/ArticlePagination/ArticlePagination.js","components/articles/MainArticleContainer/MainArticleContainer.js","components/articles/ArticleThumbnail/ArticleThumbnail.js"],"names":["ArticlePagination","oldContentAvailable","newContentAvailable","nextPage","prevPage","className","aria-label","onClick","disabled","viewBox","fill","xmlns","d","MainArticleContainer","useState","articles","setArticles","apiError","setApiError","currentPage","setCurrentPage","setOldContentAvailable","setNewContentAvailable","articleSection","useRef","useEffect","gsap","fromTo","current","autoAlpha","y","ease","delay","axios","get","then","res","data","catch","error","console","log","length","ref","Container","map","article","date","Date","published_at","day","getDate","month","getMonth","year","getFullYear","toString","split","slice","join","ArticleThumbnail","key","id","url","img","cover_image","title","reactions","positive_reactions_count","tag","tag_list","isHovering","setIsHovering","atMainSectionImgStyle","width","height","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","transform","opacity","position","top","left","right","zIndex","cursor","transition","atTitle","color","fontWeight","lineHeight","atCTASectionStyle","display","visibility","alignItems","atMetaTag","fontSize","margin","atCtaText","atCtaIcon","href","onMouseEnter","prevState","onMouseLeave","target","rel","style","React","memo"],"mappings":"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","file":"static/js/6.3df511d4.chunk.js","sourcesContent":["import React from \"react\";\nimport './articlePagination.css';\n\n\n\n// This is static top section of the page and gives it semantic value.\nfunction ArticlePagination({ oldContentAvailable, newContentAvailable, nextPage, prevPage }) {\n\n\n\n    return (\n        <div className=\"articlePagination\">\n            <button\n                aria-label=\"Pagination Button Previous\"\n                className=\"ap__btn\"\n                onClick={prevPage}\n                disabled={!newContentAvailable}\n            >\n                <svg\n                    className=\"ap__icon\"\n                    viewBox=\"0 0 7 8\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M4.02401 7.46477L3.67718 7.87146C3.53032 8.04366 3.29285 8.04366 3.14755 7.87146L0.110388 4.31204C-0.0364704 4.13984 -0.0364704 3.86138 0.110388 3.69102L3.14755 0.12976C3.29441 -0.0424404 3.53188 -0.0424404 3.67718 0.12976L4.02401 0.536447C4.17243 0.710479 4.16931 0.994427 4.01776 1.1648L2.13516 3.26784L6.62529 3.26784C6.83308 3.26784 7.00024 3.46386 7.00024 3.7075V4.29372C7.00024 4.53736 6.83308 4.73338 6.62529 4.73338L2.13516 4.73338L4.01776 6.83642C4.17087 7.00679 4.174 7.29074 4.02401 7.46477Z\" />\n                </svg>\n\n            </button>\n\n            <button\n                aria-label=\"Pagination Button Next\"\n                className=\"ap__btn\"\n                onClick={nextPage}\n                disabled={!oldContentAvailable}\n            >\n\n                <svg\n                    className=\"ap__icon\"\n                    viewBox=\"0 0 7 8\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M2.97647 0.536447L3.32331 0.129761C3.47017 -0.0424398 3.70764 -0.0424398 3.85294 0.129761L6.8901 3.68918C7.03696 3.86138 7.03696 4.13984 6.8901 4.31021L3.85294 7.87146C3.70608 8.04366 3.46861 8.04366 3.32331 7.87146L2.97647 7.46477C2.82805 7.29074 2.83118 7.00679 2.98272 6.83642L4.86533 4.73338L0.375202 4.73338C0.167413 4.73338 0.000244141 4.53736 0.000244141 4.29372L0.000244141 3.7075C0.000244141 3.46386 0.167413 3.26784 0.375202 3.26784L4.86533 3.26784L2.98272 1.1648C2.82962 0.994428 2.82649 0.71048 2.97647 0.536447Z\" />\n                </svg>\n\n            </button>\n        </div>\n\n    )\n}\n\n\nexport default ArticlePagination;","import React, { useEffect, useRef, useState } from \"react\";\nimport './mainArticleContainer.css';\nimport Container from 'react-bootstrap/Container';\nimport { gsap } from \"gsap\";\nimport ArticleThumbnail from '../ArticleThumbnail/ArticleThumbnail';\nimport ArticlePagination from '../ArticlePagination/ArticlePagination';\nimport axios from 'axios';\n\n\n// This is static top section of the page and gives it semantic value.\nfunction MainArticleContainer() {\n\n    // Local State\n    const [articles, setArticles] = useState([]);\n    const [apiError, setApiError] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [oldContentAvailable, setOldContentAvailable] = useState(true);\n    const [newContentAvailable, setNewContentAvailable] = useState(false);\n\n    // Ref for Article Section\n    const articleSection = useRef(null);\n\n    // // GSAP ANIMATIONS\n    useEffect(() => {\n\n\n        gsap.fromTo(articleSection.current, {\n            autoAlpha: 0,\n            y: 50\n        },\n            {\n                autoAlpha: 1,\n                y: 0,\n                ease: \"expo\",\n                delay: 1\n            });\n\n    }, []);\n\n\n\n    // Checks if there are Newer posts available \n    useEffect(() => {\n        // Calls first page from API on initial load\n        axios.get(`https://dev.to/api/articles?username=gedalyakrycer&per_page=9&page=${currentPage}`)\n            .then(res => {\n                setArticles(res.data);\n            })\n            .catch(error => {\n                console.log(error);\n                setApiError(error);\n            })\n\n        if (currentPage > 1) {\n            setNewContentAvailable(true);\n        } else {\n            setNewContentAvailable(false);\n        }\n    }, [currentPage])\n\n    // Checks if there are older posts available \n    useEffect(() => {\n        if (articles.length === 0) {\n            setOldContentAvailable(false);\n        } else {\n            setOldContentAvailable(true);\n        }\n    }, [articles])\n\n\n    const handleNextPage = () => {\n        setCurrentPage(prevPage => prevPage + 1);\n    }\n\n    const handlePrevPage = () => {\n        setCurrentPage(prevPage => prevPage - 1)\n    }\n\n\n    return (\n        <section\n            ref={articleSection}\n            className=\"mainThumbnailContainer\">\n            <Container>\n\n                {!apiError ?\n                    (\n                        <>\n                            <div className=\"mtc__row\">\n\n                                {articles.length === 0 ? (\n                                    <div className=\"mtc__article-end\">\n                                        <h3>Thank you for reading!</h3>\n                                        <p>This is the end of the available articles. You can cycle back below for more recent ones.</p>\n                                    </div>\n                                ) : null}\n\n                                {articles && articles.map((article) => {\n\n                                    // Create Date\n                                    let date = new Date(article.published_at);\n                                    const day = date.getDate()\n                                    const month = date.getMonth() + 1;\n                                    let year = date.getFullYear().toString().split(\"\").slice(2, 4).join(\"\");\n\n                                    return <ArticleThumbnail\n                                        key={article.id}\n                                        url={article.url}\n                                        img={article.cover_image}\n                                        title={article.title}\n                                        reactions={article.positive_reactions_count}\n                                        tag={article.tag_list.slice(0, 1)}\n                                        date={`${month}/${day}/${year}`}\n\n\n\n                                    />\n                                })}\n\n                            </div>\n\n\n\n                        </>)\n                    : <p>{apiError}</p>\n                }\n\n\n\n                <ArticlePagination\n                    oldContentAvailable={oldContentAvailable}\n                    newContentAvailable={newContentAvailable}\n                    nextPage={handleNextPage}\n                    prevPage={handlePrevPage}\n                />\n\n\n            </Container>\n\n        </section>\n    )\n}\n\n\nexport default MainArticleContainer;","import React, { useState } from 'react';\nimport './articleThumbnail.css';\n\nconst ArticleThumbnail = ({ url, img, title, reactions, tag, date }) => {\n\n    // Intern States\n    const [isHovering, setIsHovering] = useState(false);\n\n    // Styles For Elements Effected By Hover\n    const atMainSectionImgStyle = {\n        width: '100%',\n        height: '100%',\n        backgroundImage: `linear-gradient(180deg, rgba(0, 0, 0, 0) 66.51%, rgba(0, 0, 0, 0.31) 100%), url(${img})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        transform: isHovering ? \"scale(1.1)\" : \"scale(1)\",\n        opacity: isHovering ? 1 : 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 1,\n        cursor: \"pointer\",\n        transition: 'all 0.5s cubic-bezier(.8,.02,.52,1)'\n    }\n\n    const atTitle = {\n        opacity: isHovering ? 0 : 1,\n        transform: isHovering ? \"scale(1.1)\" : \"scale(1)\",\n        color: \"white\",\n        fontWeight: 500,\n        lineHeight: \"22px\",\n        position: 'absolute',\n        top: isHovering ? 20 : 15,\n        left: 18,\n        right: 18,\n        zIndex: 2,\n        transition: 'all 0.5s cubic-bezier(.8,.02,.52,1)'\n    }\n\n    const atCTASectionStyle = {\n        display: \"flex\",\n        visibility: isHovering ? \"visible\" : \"hidden\",\n        alignItems: 'center',\n        position: 'absolute',\n        left: 12,\n        top: 5\n    }\n\n    const atMetaTag = {\n        fontSize: 12,\n        color: 'var(--nav-filter-links)',\n        margin: 0,\n        fontWeight: 'bold',\n        opacity: isHovering ? 0 : 1,\n        transform: isHovering ? \"translateX(5px)\" : \"translateX(0)\",\n        transition: 'all 0.5s cubic-bezier(.8,.02,.52,1)'\n    }\n\n    const atCtaText = {\n        opacity: isHovering ? 1 : 0,\n        transform: isHovering ? \"translateX(5px)\" : \"translateX(0)\",\n        color: \"var(--primary-blue)\",\n        margin: \"0 8px 0 0\",\n        lineHeight: \"19px\",\n        transition: 'all 0.5s cubic-bezier(.8,.02,.52,1)'\n    }\n\n    const atCtaIcon = {\n        opacity: isHovering ? 1 : 0,\n        transform: isHovering ? \"translateX(5px)\" : \"translateX(0)\",\n        width: 7,\n        height: 6,\n        fill: \"var(--primary-blue)\",\n        transition: 'all 0.7s cubic-bezier(.8,.02,.52,1)'\n    }\n\n\n\n\n    return (\n        <a\n            href={url}\n            onMouseEnter={() => setIsHovering(prevState => !prevState)}\n            onMouseLeave={() => setIsHovering(prevState => !prevState)}\n            className=\"articleThumbnail\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            <div className=\"at__main-section\">\n                <h4 style={atTitle}>{title}</h4>\n                <div style={atMainSectionImgStyle}></div>\n\n            </div>\n            <div className=\"at__meta-section\">\n                <div className=\"at__meta-left-group\">\n                    <p style={atMetaTag}>#{tag}</p>\n                    <div style={atCTASectionStyle}>\n                        <h5 style={atCtaText} >Read article</h5>\n                        <svg\n                            style={atCtaIcon}\n                            viewBox=\"0 0 7 6\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path d=\"M0.680062 0.921049L0.637741 0.388228C0.619822 0.162619 0.787741 -0.00530041 1.01225 0.0137238L5.67673 0.383019C5.90234 0.400939 6.09924 0.597834 6.11586 0.822147L6.48645 5.48793C6.50437 5.71354 6.33645 5.88146 6.11195 5.86244L5.57913 5.82012C5.35112 5.80201 5.15255 5.59901 5.13924 5.37139L4.98336 2.55311L1.80836 5.72811C1.66143 5.87503 1.40462 5.85464 1.23234 5.68235L0.817824 5.26784C0.645541 5.09555 0.625143 4.83874 0.772073 4.69181L3.94707 1.51682L1.12879 1.36094C0.900058 1.34873 0.697067 1.15016 0.680062 0.921049Z\" />\n                        </svg>\n\n                    </div>\n                </div>\n\n                <div className=\"at__reaction-wrapper\">\n                    <p className=\"at__reaction-text\">{reactions}</p>\n                    <svg\n                        className=\"at__reaction-icon\"\n                        viewBox=\"0 0 11 11\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M9.84843 1.22128C8.60664 0.136749 6.68808 0.299651 5.5 1.55601C4.31191 0.299651 2.39336 0.134517 1.15156 1.22128C-0.46406 2.63384 -0.227732 4.93678 0.92383 6.15743L4.69219 10.1452C4.90703 10.3728 5.19492 10.5 5.5 10.5C5.80723 10.5 6.09297 10.375 6.30781 10.1474L10.0762 6.15966C11.2256 4.93901 11.4662 2.63607 9.84843 1.22128V1.22128ZM9.3414 5.4054L5.57305 9.39316C5.52148 9.44671 5.47851 9.44671 5.42695 9.39316L1.65859 5.4054C0.874416 4.57527 0.715432 3.00427 1.81543 2.04248C2.65117 1.31277 3.94023 1.42211 4.74805 2.27679L5.5 3.07345L6.25195 2.27679C7.06406 1.41765 8.35312 1.31277 9.18457 2.04025C10.2824 3.00204 10.1191 4.58197 9.3414 5.4054V5.4054Z\" />\n                    </svg>\n\n                </div>\n\n                <p className=\"at__publish-data\">{date}</p>\n            </div>\n\n        </a>\n    )\n}\n\nexport default React.memo(ArticleThumbnail);\n"],"sourceRoot":""}